(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    251447,       5631]
NotebookOptionsPosition[    248033,       5520]
NotebookOutlinePosition[    248390,       5536]
CellTagsIndexPosition[    248347,       5533]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", "vacData", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6911126260126557`*^9, 3.691112640967351*^9}, {
  3.6915463305474524`*^9, 3.69154633073497*^9}, {3.7057528064542875`*^9, 
  3.7057528322808695`*^9}, {3.720084375315183*^9, 3.7200843803295116`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Context", "[", "]"}], "<>", "\"\<*\>\""}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "MaTeX`"}]}], "Input",
 CellChangeTimes->{{3.690886848965241*^9, 3.6908868775344353`*^9}, {
  3.6908869091304426`*^9, 3.6908869170484924`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "ErrorBarPlots`"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AutoCollapse", "[", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"$FrontEnd", "=!=", "$Failed"}], ",", 
      RowBox[{
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", "All", ",", 
         "GeneratedCell"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "FrontEndTokenExecute", "[", "\"\<SelectionCloseUnselectedCells\>\"", 
        "]"}]}]}], "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HideText", "[", "x_", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", 
     RowBox[{"AutoCollapse", "[", "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"MaTeX", ",", 
    RowBox[{"\"\<Preamble\>\"", "\[Rule]", 
     RowBox[{
     "{", "\"\<\\\\usepackage{physics,nicefrac,esint,siunitx,bm,ctex}\>\"", 
      "}"}]}], ",", 
    RowBox[{"\"\<Magnification\>\"", "\[Rule]", "1.5"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MyTeX", "[", "x_", "]"}], ":=", 
   RowBox[{"HideText", "[", 
    RowBox[{"MaTeX", "[", "x", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"HideText", "[", "\"\<* Some Basic setup *\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.6908851682067757`*^9, 3.690885336870591*^9}, {
  3.6908868386672707`*^9, 3.6908868801284313`*^9}, {3.6908869141934505`*^9, 
  3.6908869145372686`*^9}, {3.691552788687087*^9, 3.691552789834198*^9}}],

Cell[BoxData["\<\"* Some Basic setup *\"\>"], "Print",
 CellChangeTimes->{
  3.705752159727177*^9, 3.705752383236041*^9, 3.7057526085010767`*^9, 
   3.7057530921598473`*^9, 3.7057533135054865`*^9, {3.705754704022317*^9, 
   3.705754724704961*^9}, {3.705754843438509*^9, 3.7057548579416*^9}, 
   3.705755002800602*^9, {3.7057904180538864`*^9, 3.705790429180069*^9}, 
   3.7057953890697794`*^9, 3.705800668272112*^9, 3.7058040302985773`*^9, 
   3.705804064475436*^9, {3.705804250526122*^9, 3.705804260501526*^9}, 
   3.705804475003332*^9, 3.7058045115291815`*^9, 3.70580454758171*^9, 
   3.705811971342492*^9, 3.705813885326399*^9, 3.7058145760141993`*^9, 
   3.7058332528371058`*^9, {3.7058381800899687`*^9, 3.70583818435404*^9}, 
   3.7188691628221025`*^9, 3.718873743959422*^9, 3.7188755655621023`*^9, 
   3.7188779538717995`*^9, 3.719912795021247*^9, 3.7199177556203785`*^9, 
   3.7199198014642553`*^9, {3.7199246166714706`*^9, 3.719924632558734*^9}, 
   3.7199275094340262`*^9, 3.719964155051098*^9, 3.7200820678343525`*^9, 
   3.7200847050914154`*^9, 3.7200896221568637`*^9, 3.720143807486391*^9, 
   3.720162363559574*^9, 3.7201695188036795`*^9, 3.7201721431204357`*^9, 
   3.7201729382472067`*^9, 3.7202209342785864`*^9, 3.720222683131811*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ConfigureMaTeX", "[", 
     RowBox[{
     "\"\<pdfLaTeX\>\"", "\[Rule]", 
      "\"\<C:\\\\texlive\\\\2016\\\\bin\\\\win32\\\\xelatex.exe\>\""}], "]"}],
     ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ConfigureMaTeX", "[", 
     RowBox[{
     "\"\<pdfLaTeX\>\"", "\[Rule]", 
      "\"\<C:\\\\texlive\\\\2016\\\\bin\\\\win32\\\\pdflatex.exe\>\""}], 
     "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "HideText", "[", "\"\<* Engine unchanged, possibly pdfLaTeX *\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6915533603615985`*^9, 3.6915533894712467`*^9}, 
   3.6915534594019375`*^9, {3.6915534947221713`*^9, 3.691553500176725*^9}, {
   3.691553536503107*^9, 3.6915535502372584`*^9}, 3.691553601079608*^9, 
   3.6920897604921093`*^9, {3.6920910261376038`*^9, 3.692091061659707*^9}, {
   3.705735215607478*^9, 3.7057352306735477`*^9}, {3.705735269552764*^9, 
   3.705735275975334*^9}, {3.7057521703017216`*^9, 3.7057521890059032`*^9}}],

Cell[BoxData["\<\"* Engine unchanged, possibly pdfLaTeX *\"\>"], "Print",
 CellChangeTimes->{
  3.7057352771784954`*^9, 3.705742346846798*^9, 3.705752034201997*^9, 
   3.7057521927621436`*^9, 3.7057523832869263`*^9, 3.705752608547963*^9, 
   3.7057530922127867`*^9, 3.705753313552369*^9, {3.705754704084824*^9, 
   3.7057547247422934`*^9}, {3.705754843469763*^9, 3.705754857972824*^9}, 
   3.7057550028318563`*^9, {3.7057904181789365`*^9, 3.70579042921135*^9}, 
   3.7057953891010036`*^9, 3.7058006683723955`*^9, 3.70580403034546*^9, {
   3.7058040646291285`*^9, 3.705804086141659*^9}, {3.705804250561425*^9, 
   3.705804260538999*^9}, 3.705804475050213*^9, 3.705804511582082*^9, 
   3.705804547635112*^9, 3.7058119713737187`*^9, 3.705813885357682*^9, 
   3.7058145760454254`*^9, 3.705833252916819*^9, {3.7058381801544895`*^9, 
   3.705838184387156*^9}, 3.718869176031227*^9, 3.7188737440219283`*^9, 
   3.718875565622262*^9, 3.7188779539269466`*^9, 3.718878688552846*^9, 
   3.719912795067675*^9, 3.719917755667259*^9, 3.7199198016205406`*^9, {
   3.719924616733954*^9, 3.719924632605612*^9}, 3.7199275094809065`*^9, 
   3.719964155113604*^9, 3.72008206814688*^9, 3.720084705138317*^9, 
   3.7200896222037425`*^9, 3.7201438077832985`*^9, 3.7201623639971237`*^9, 
   3.720169518991205*^9, 3.7201721440892897`*^9, 3.7201729383253393`*^9, 
   3.720220934559884*^9, 3.720222683200286*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"omarker", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", ".2", "]"}], ",", 
      RowBox[{"Circle", "[", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"colors", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\"\<DefaultPlotStyle\>\"", "/.", 
      RowBox[{"(", 
       RowBox[{"Method", "/.", 
        RowBox[{"Charting`ResolvePlotTheme", "[", 
         RowBox[{"\"\<Scientific\>\"", ",", "ListPlot"}], "]"}]}], ")"}]}], 
     ")"}], "/.", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{"x_", ",", "__"}], "]"}], "\[RuleDelayed]", "x"}]}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.6991010186309423`*^9, 3.699101037304418*^9}, {
  3.6991011146847143`*^9, 3.699101114858676*^9}, {3.705752198552208*^9, 
  3.7057522175458584`*^9}, {3.7057960927233133`*^9, 3.7057961003022943`*^9}, {
  3.718873144057887*^9, 3.718873146106333*^9}, {3.7199224888648157`*^9, 
  3.719922489146023*^9}, {3.7199226993011456`*^9, 3.7199227013887014`*^9}, {
  3.7199661017020984`*^9, 3.7199661039054184`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9, 0.36, 0.054], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9, 0.36, 0.054]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9, 0.36, 0.054]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9, 0.36, 0.054],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.365248, 0.427802, 0.758297], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2434986666666667, 0.28520133333333336`, 0.5055313333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.365248, 0.427802, 0.758297]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.365248, 0.427802, 0.758297]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.365248, 0.427802, 0.758297],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.945109, 0.593901, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6300726666666667, 0.395934, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.945109, 0.593901, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.945109, 0.593901, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.945109, 0.593901, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.645957, 0.253192, 0.685109], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.430638, 0.16879466666666665`, 0.45673933333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.645957, 0.253192, 0.685109]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.645957, 0.253192, 0.685109]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.645957, 0.253192, 0.685109],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.285821, 0.56, 0.450773], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.19054733333333335`, 0.3733333333333334, 0.30051533333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.285821, 0.56, 0.450773]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.285821, 0.56, 0.450773]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.285821, 0.56, 0.450773],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7, 0.336, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4666666666666667, 0.22400000000000003`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7, 0.336, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7, 0.336, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7, 0.336, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.491486, 0.345109, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.32765733333333336`, 0.23007266666666668`, 0.5333333333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.491486, 0.345109, 0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.491486, 0.345109, 0.8]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.491486, 0.345109, 0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.71788, 0.568653, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.47858666666666666`, 0.379102, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.71788, 0.568653, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.71788, 0.568653, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.71788, 0.568653, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.70743, 0.224, 0.542415], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.47162000000000004`, 0.14933333333333335`, 0.36161],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.70743, 0.224, 0.542415]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.70743, 0.224, 0.542415]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.70743, 0.224, 0.542415],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.287228, 0.490217, 0.664674], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.19148533333333334`, 0.32681133333333334`, 0.443116],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.287228, 0.490217, 0.664674]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.287228, 0.490217, 0.664674]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.287228, 0.490217, 0.664674],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.654859523419136, 0.3847547579319916, 0.007695002170097091],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.982289285128704, 0.5771321368979874, 0.011542503255145636`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.39178268838668523`, 0.1918189666580054, 0.5000463798308615],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2841392401197862, 0.3721035206671719, 0.18519978202780152`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6287658362508575, 0.27637059755855536`, 0.04760552703913903],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.27664958093414427`, 0.262421431671568, 0.5228662519410061],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.41497437140121635, 0.393632147507352, 0.7842993779115092]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.41497437140121635`, 0.393632147507352, 0.7842993779115092]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.719922490177373*^9, 3.7199227017793913`*^9, {3.719924616827711*^9, 
   3.7199246326837454`*^9}, 3.719927509543426*^9, 3.719964155363657*^9, 
   3.7199661042804594`*^9, 3.7200820684125347`*^9, 3.7200847052008047`*^9, 
   3.720089622266278*^9, 3.720143808239505*^9, 3.7201623645284023`*^9, 
   3.7201695191943445`*^9, 3.7201721449976883`*^9, 3.720172938434757*^9, 
   3.720220934809903*^9, 3.720222683294046*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vacDataRAW", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13", ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"16", ",", "17"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"19", ",", "21"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"airDataRAW", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "12"}], "}"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.719912781873062*^9, {3.7199128239144707`*^9, 3.7199128777585526`*^9}, {
   3.719913081074377*^9, 3.719913130699005*^9}, {3.719913205022587*^9, 
   3.7199133980142536`*^9}, {3.719913433397077*^9, 3.7199134459941435`*^9}, {
   3.7199134930391703`*^9, 3.7199135282808046`*^9}, {3.7199135985575056`*^9, 
   3.7199136294168377`*^9}, {3.7199137059626927`*^9, 
   3.7199137310348625`*^9}, {3.7199137675750494`*^9, 3.71991377752288*^9}, {
   3.71991381319715*^9, 3.719914160465599*^9}, {3.7199141953777647`*^9, 
   3.71991428523483*^9}, 3.719914426781661*^9, {3.719914761918411*^9, 
   3.719914817532004*^9}, {3.719914920711241*^9, 3.719914944240307*^9}, {
   3.7199150005018473`*^9, 3.719915012648534*^9}, 3.7199152397692523`*^9, {
   3.719915333563783*^9, 3.719915425147679*^9}, {3.719915508220868*^9, 
   3.7199155175321007`*^9}, {3.7199170633860636`*^9, 3.719917075751837*^9}, {
   3.7199245539578457`*^9, 3.7199246472341356`*^9}, {3.7199271660877037`*^9, 
   3.7199271676034837`*^9}, {3.719927198000681*^9, 3.7199272041263275`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vacData", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"2", ",", "8"}], "]"}], ",", "vacDataRAW"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"airData", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "6", ",", "8"}], "}"}], ",", "airDataRAW"}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7199159790629635`*^9, 3.7199159826883507`*^9}, {
  3.719916023910731*^9, 3.7199160257391214`*^9}, {3.7199161629836917`*^9, 
  3.7199163593889236`*^9}, {3.719916412986228*^9, 3.719916420654827*^9}, {
  3.7199169227301097`*^9, 3.719916967430787*^9}, {3.719917018079272*^9, 
  3.719917143456191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindPeaks", "[", 
      RowBox[{"#", ",", "16.4"}], "]"}], "&"}], "/@", 
    RowBox[{
     RowBox[{"Values", "[", "vacData", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}]}], "//", 
   "N"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Column"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeaks", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "vacData", "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"50", "<", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           "450"}], "&"}], "]"}], "/@", "%%"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"vacPeaks", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.719964293783692*^9, 3.71996429678401*^9}, {
  3.7199645393208942`*^9, 3.7199646335168877`*^9}, {3.7199647095817275`*^9, 
  3.7199647230064697`*^9}, {3.7199647682179656`*^9, 3.7199648864614925`*^9}, {
  3.71996493064412*^9, 3.7199649698059397`*^9}, {3.719965050462383*^9, 
  3.719965257123027*^9}, {3.7199652943829885`*^9, 3.71996532125453*^9}, {
  3.7199654509415307`*^9, 3.7199655021972446`*^9}, {3.7199655400435624`*^9, 
  3.7199655762340574`*^9}, {3.719965649699698*^9, 3.7199657591567335`*^9}, {
  3.7199658037182713`*^9, 3.7199658092344093`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "3015.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"85.`", ",", "2548.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "2.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12.`", ",", "2792.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"135.`", ",", "2978.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "6.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.5`", ",", "2282.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"185.`", ",", "2923.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "3.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "1865.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"227.`", ",", "2646.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "2.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "1267.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"285.`", ",", "1769.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "1.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15.`", ",", "856.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"337.`", ",", "932.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "2.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "708.6666666666666`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"386.`", ",", "355.3333333333333`"}], "}"}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7199649706028204`*^9, {3.719965057158814*^9, 3.7199652148335905`*^9}, 
   3.7199654518322053`*^9, 3.7199655072102213`*^9, {3.719965554546773*^9, 
   3.7199655771107597`*^9}, 3.719965659358039*^9, {3.719965719235694*^9, 
   3.719965756875242*^9}, 3.719965809843853*^9, 3.720082079053002*^9, 
   3.7200847075639787`*^9, 3.720089624794174*^9, 3.7201438178625293`*^9, 
   3.720162375327578*^9, 3.7201695258959293`*^9, 3.7201721605661*^9, 
   3.72017294068497*^9, 3.72022094463785*^9, 3.720222685653672*^9}],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 7, "Length" -> 7, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 2], 7], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`UnknownShape]], 7, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[602134499], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 2], 7], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[602134499]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["2"], 
                    Style[
                    RawBoxes["2"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[2]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[2]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{85., 2548.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{85., 2548.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[2]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[2]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["3"], 
                    Style[
                    RawBoxes["3"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[3]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[3]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{135., 2978.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{135., 2978.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[3]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[3]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["4"], 
                    Style[
                    RawBoxes["4"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[4]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[4]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{185., 2923.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{185., 2923.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[4]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[4]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["5"], 
                    Style[
                    RawBoxes["5"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[5]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[5]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{227., 2646.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{227., 2646.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[5]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[5]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["6"], 
                    Style[
                    RawBoxes["6"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[6]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[6]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{285., 1769.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{285., 1769.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[6]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[6]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["7"], 
                    Style[
                    RawBoxes["7"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[7]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[7]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{337., 932.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{337., 932.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[7]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[7]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover[
                    RawBoxes["8"], 
                    Style[
                    RawBoxes["8"], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[8]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                   GeneralUtilities`Slice[
                    Key[8]]], "Mouse"], ImageSize -> {{34, Full}, Automatic}],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{386., 355.3333333333333}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{386., 355.3333333333333}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][{
                    Key[8]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
                  GeneralUtilities`Slice[
                   Key[8]]], "Mouse"]]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        Initialization :> If[
          Not[$CloudEvaluation], 
          TypeSystem`NestedGrid`PackagePrivate`attachScrollbar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$]], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`Pathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 747491711]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[747491711][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         TypeSystem`NestedGrid`PackagePrivate`shiftRight[{
          TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`$state$$]], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]], DynamicModuleValues :> {}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
    DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7199649706028204`*^9, {3.719965057158814*^9, 3.7199652148335905`*^9}, 
   3.7199654518322053`*^9, 3.7199655072102213`*^9, {3.719965554546773*^9, 
   3.7199655771107597`*^9}, 3.719965659358039*^9, {3.719965719235694*^9, 
   3.719965756875242*^9}, 3.719965809843853*^9, 3.720082079053002*^9, 
   3.7200847075639787`*^9, 3.720089624794174*^9, 3.7201438178625293`*^9, 
   3.720162375327578*^9, 3.7201695258959293`*^9, 3.7201721605661*^9, 
   3.72017294068497*^9, 3.72022094463785*^9, 3.720222685731805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigma", "=", "16.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindPeaks", "[", 
      RowBox[{"#", ",", "sigma"}], "]"}], "&"}], "/@", 
    RowBox[{
     RowBox[{"Values", "[", "vacData", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}]}], "//", 
   "N"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "Column"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeaks", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "vacData", "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"50", "<", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           "450"}], "&"}], "]"}], "/@", "%%"}], ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeaks", "//", "Values"}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.719964293783692*^9, 3.71996429678401*^9}, {
  3.7199645393208942`*^9, 3.7199646335168877`*^9}, {3.7199647095817275`*^9, 
  3.7199647230064697`*^9}, {3.7199647682179656`*^9, 3.7199648864614925`*^9}, {
  3.71996493064412*^9, 3.7199649698059397`*^9}, {3.719965050462383*^9, 
  3.719965257123027*^9}, {3.7199652943829885`*^9, 3.71996532125453*^9}, {
  3.7199654509415307`*^9, 3.7199655021972446`*^9}, {3.7199655400435624`*^9, 
  3.7199655762340574`*^9}, {3.719965649699698*^9, 3.7199657591567335`*^9}, {
  3.7199658037182713`*^9, 3.7199658092344093`*^9}, {3.71996653326956*^9, 
  3.7199665450523767`*^9}, {3.7200827260650053`*^9, 3.7200827425511518`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "3015.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"85.`", ",", "2548.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "2.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12.`", ",", "2792.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"135.`", ",", "2978.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "6.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.5`", ",", "2282.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"185.`", ",", "2923.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "3.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "1865.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"227.`", ",", "2646.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "2.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "1267.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"285.`", ",", "1769.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "1.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15.`", ",", "856.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"337.`", ",", "932.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"512.`", ",", "2.`"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13.`", ",", "708.6666666666666`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"386.`", ",", "355.3333333333333`"}], "}"}]}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7199649706028204`*^9, {3.719965057158814*^9, 3.7199652148335905`*^9}, 
   3.7199654518322053`*^9, 3.7199655072102213`*^9, {3.719965554546773*^9, 
   3.7199655771107597`*^9}, 3.719965659358039*^9, {3.719965719235694*^9, 
   3.719965756875242*^9}, 3.719965809843853*^9, 3.719966546138895*^9, 
   3.720082082834652*^9, {3.7200827277526865`*^9, 3.7200827431136856`*^9}, 
   3.720084707876512*^9, 3.7200896250754795`*^9, 3.7201438219098663`*^9, 
   3.7201623791561375`*^9, 3.7201695281842337`*^9, 3.7201721616667924`*^9, 
   3.7201729409975047`*^9, 3.7202209457967596`*^9, 3.7202226859349775`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"85.`", "2548.`"},
    {"135.`", "2978.`"},
    {"185.`", "2923.`"},
    {"227.`", "2646.`"},
    {"285.`", "1769.`"},
    {"337.`", "932.`"},
    {"386.`", "355.3333333333333`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7199649706028204`*^9, {3.719965057158814*^9, 3.7199652148335905`*^9}, 
   3.7199654518322053`*^9, 3.7199655072102213`*^9, {3.719965554546773*^9, 
   3.7199655771107597`*^9}, 3.719965659358039*^9, {3.719965719235694*^9, 
   3.719965756875242*^9}, 3.719965809843853*^9, 3.719966546138895*^9, 
   3.720082082834652*^9, {3.7200827277526865`*^9, 3.7200827431136856`*^9}, 
   3.720084707876512*^9, 3.7200896250754795`*^9, 3.7201438219098663`*^9, 
   3.7201623791561375`*^9, 3.7201695281842337`*^9, 3.7201721616667924`*^9, 
   3.7201729409975047`*^9, 3.7202209457967596`*^9, 3.7202226859505787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["vacPeaks"], "Input",
 CellChangeTimes->{{3.7199662198824215`*^9, 3.719966222710898*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"85.`", ",", "2548.`"}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"135.`", ",", "2978.`"}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"185.`", ",", "2923.`"}], "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"227.`", ",", "2646.`"}], "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"285.`", ",", "1769.`"}], "}"}]}], ",", 
   RowBox[{"7", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"337.`", ",", "932.`"}], "}"}]}], ",", 
   RowBox[{"8", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"386.`", ",", "355.3333333333333`"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.720082082928409*^9, 3.720084707892165*^9, 
  3.7200896251067066`*^9, 3.720143821941146*^9, 3.7201623791873875`*^9, 
  3.7201695281998844`*^9, 3.720172161682417*^9, 3.7201729410287886`*^9, 
  3.7202209458123875`*^9, 3.7202226859662037`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"vacPlot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Values", "[", "vacData", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"omarker", ",", ".012"}], "}"}]}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3500"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRangePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"50", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"25", ",", "30"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"HoldForm", "@", 
          RowBox[{"Evaluate", "@", 
           RowBox[{"SwatchLegend", "[", 
            RowBox[{"colors", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\"\<\:2116 \>\"", "<>", 
                 RowBox[{"ToString", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
              RowBox[{"Keys", "[", "vacData", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "6"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
                RowBox[{
                "FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
               "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"LegendLabel", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{"\"\<\:51fa\:5c04\:7a97\:53e3\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{".85", ",", ".55"}], "}"}]}], "]"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"vacPeaks", "//", "Values"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"Callout", "[", 
          RowBox[{"#1", ",", "#2", ",", "Above", ",", "\[IndentingNewLine]", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Line\>\""}]}], "]"}], "&"}], 
        "@@@", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"300", ",", "2000"}], "}"}], ",", "\"\<huh\\nhuh\>\""}], 
          "}"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"omarker", ",", ".04"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"Style", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<\:9ed1\:4f53\>\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "10.5"}]}], "]"}]}], ",", "#2"}], 
         "]"}], "&"}], ")"}], "@@@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<\:9053\:5740\>\"", ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"1.075", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<\:8ba1\:6570\>\"", ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1.08"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
  RowBox[{"HoldForm", "@", "vacPlot"}]}]}], "Input",
 CellChangeTimes->{{3.705753318184683*^9, 3.7057533567469563`*^9}, {
   3.705753528790601*^9, 3.705753534582327*^9}, {3.7057537528393135`*^9, 
   3.705753766052003*^9}, 3.705755014220559*^9, {3.7057963199192934`*^9, 
   3.705796396489955*^9}, {3.7057964450575857`*^9, 3.7057964533241396`*^9}, {
   3.7057964861296015`*^9, 3.705796499130992*^9}, {3.705796642349328*^9, 
   3.7057966448652163`*^9}, {3.705796698620923*^9, 3.7057967203420258`*^9}, {
   3.7057967612682037`*^9, 3.705796796459445*^9}, {3.7057968403703585`*^9, 
   3.705796980967191*^9}, {3.705800773627221*^9, 3.705800903210889*^9}, 
   3.705801222008751*^9, {3.7058086473160133`*^9, 3.705808661520688*^9}, {
   3.705811414548972*^9, 3.705811491635257*^9}, {3.7058115337960186`*^9, 
   3.705811579582103*^9}, {3.705841591758562*^9, 3.705841606644788*^9}, {
   3.7058416611700974`*^9, 3.705841667593712*^9}, {3.705841756286728*^9, 
   3.705841782758559*^9}, {3.7188699331626325`*^9, 3.718869939819592*^9}, {
   3.7188700076549463`*^9, 3.718870131230326*^9}, {3.7188708190132446`*^9, 
   3.718870819747615*^9}, {3.7188710823169265`*^9, 3.718871298876913*^9}, {
   3.718871338886292*^9, 3.7188713743887124`*^9}, {3.7188714093369102`*^9, 
   3.7188714178806305`*^9}, {3.71887158404255*^9, 3.7188716779341497`*^9}, {
   3.7188717946204853`*^9, 3.718871819370309*^9}, {3.7188718617550354`*^9, 
   3.7188719155220327`*^9}, {3.718872056645363*^9, 3.718872363302408*^9}, {
   3.7188726413539305`*^9, 3.7188726486244254`*^9}, {3.718872687552927*^9, 
   3.7188727267912836`*^9}, {3.7188731003506713`*^9, 3.718873135681608*^9}, {
   3.7188731694454403`*^9, 3.7188732398467555`*^9}, {3.7188737386504364`*^9, 
   3.7188737408037176`*^9}, {3.718873849360498*^9, 3.7188739375914183`*^9}, {
   3.718873979603403*^9, 3.7188739840071087`*^9}, {3.7188740866832204`*^9, 
   3.7188741128650656`*^9}, {3.7188743202341566`*^9, 
   3.7188743481594267`*^9}, {3.718874394173806*^9, 3.7188745263663845`*^9}, {
   3.7188745812995152`*^9, 3.7188746655335402`*^9}, {3.718875042801967*^9, 
   3.7188750829757905`*^9}, {3.71887511863564*^9, 3.718875153411113*^9}, {
   3.718875184616082*^9, 3.7188751855806437`*^9}, {3.7188752598221292`*^9, 
   3.718875301012677*^9}, {3.7188753311217227`*^9, 3.7188754225117893`*^9}, {
   3.7188754570887427`*^9, 3.718875506522214*^9}, {3.718875540709137*^9, 
   3.7188755407933884`*^9}, {3.718875585322891*^9, 3.7188756019200335`*^9}, {
   3.7188764250824304`*^9, 3.71887648807399*^9}, {3.7188765286980095`*^9, 
   3.7188765718086443`*^9}, {3.718876624193967*^9, 3.7188766660232353`*^9}, {
   3.718876733828517*^9, 3.7188768124847097`*^9}, {3.718876859666219*^9, 
   3.7188768597614455`*^9}, {3.718876979473831*^9, 3.7188769873287687`*^9}, {
   3.7188771527788897`*^9, 3.7188772402703*^9}, {3.7188774529704213`*^9, 
   3.7188774581281443`*^9}, {3.7188775233806887`*^9, 
   3.7188775250531597`*^9}, {3.7188775561538734`*^9, 
   3.7188776296283016`*^9}, {3.7188777989803305`*^9, 
   3.7188778086470394`*^9}, {3.7188778659058495`*^9, 3.718877870771799*^9}, {
   3.7188779363110986`*^9, 3.718877948956731*^9}, {3.7188780084313974`*^9, 
   3.7188780730281973`*^9}, {3.7188781041741247`*^9, 3.718878104612293*^9}, {
   3.7188782790627785`*^9, 3.718878286388258*^9}, {3.718878346254512*^9, 
   3.718878413584544*^9}, {3.718878511534049*^9, 3.7188786392587748`*^9}, {
   3.718878699796748*^9, 3.7188787150954356`*^9}, {3.7188788490563865`*^9, 
   3.718878862629515*^9}, {3.718878900760898*^9, 3.718878906679639*^9}, {
   3.7188789981058283`*^9, 3.7188790270417275`*^9}, {3.719918204659794*^9, 
   3.719918280173668*^9}, {3.7199183262380657`*^9, 3.7199184234546947`*^9}, {
   3.719918705357621*^9, 3.719918712030365*^9}, {3.7199187564458084`*^9, 
   3.7199187615744443`*^9}, {3.719918887542412*^9, 3.7199189076298337`*^9}, {
   3.7199189412642956`*^9, 3.719918956755462*^9}, {3.7199190944285536`*^9, 
   3.719919096786824*^9}, {3.719919135834671*^9, 3.719919138578971*^9}, {
   3.71991917827054*^9, 3.7199191849442606`*^9}, {3.7199192363312826`*^9, 
   3.7199192396116095`*^9}, {3.7199194247806387`*^9, 3.719919448482075*^9}, {
   3.719919480044901*^9, 3.7199194904202676`*^9}, {3.7199196479778166`*^9, 
   3.7199196718141184`*^9}, {3.7199198463453093`*^9, 
   3.7199198803645782`*^9}, {3.719919914524434*^9, 3.719919986453911*^9}, {
   3.7199200259893513`*^9, 3.719920097418839*^9}, {3.7199201771929197`*^9, 
   3.7199202222445755`*^9}, {3.719920263155243*^9, 3.719920339450058*^9}, {
   3.7199206290939293`*^9, 3.7199206493174906`*^9}, 3.7199207375153933`*^9, {
   3.719920775675293*^9, 3.719920815733015*^9}, {3.719920903969756*^9, 
   3.7199209100693483`*^9}, {3.7199209505813065`*^9, 3.719921002557025*^9}, {
   3.719921080063464*^9, 3.7199210815167704`*^9}, {3.719921141087989*^9, 
   3.7199212210265493`*^9}, {3.7199213868431897`*^9, 3.719921389453841*^9}, {
   3.7199214194687185`*^9, 3.719921497521594*^9}, {3.7199215456000547`*^9, 
   3.7199216435422626`*^9}, {3.7199216967970223`*^9, 3.719921711048499*^9}, {
   3.7199217466537743`*^9, 3.7199217787657924`*^9}, {3.719921811656888*^9, 
   3.719921812438261*^9}, 3.719921876664197*^9, {3.7199220432598753`*^9, 
   3.7199220852671804`*^9}, {3.7199221936046352`*^9, 
   3.7199221965580273`*^9}, {3.7199225902434464`*^9, 
   3.7199226592702703`*^9}, {3.7199227149045153`*^9, 3.7199227774868383`*^9}, 
   3.7199229475599985`*^9, {3.7199230779548545`*^9, 3.7199231116889315`*^9}, {
   3.7199231631201096`*^9, 3.719923183451994*^9}, {3.719923301209507*^9, 
   3.7199233283709955`*^9}, {3.719923366807398*^9, 3.7199233780985975`*^9}, {
   3.719923464306954*^9, 3.719923464322611*^9}, {3.7199236308712997`*^9, 
   3.719923652399437*^9}, {3.7199236956867228`*^9, 3.7199237719954023`*^9}, {
   3.7199238183408146`*^9, 3.7199238200285673`*^9}, {3.719923871781533*^9, 
   3.719923936787883*^9}, 3.719924022992398*^9, {3.7199240622330613`*^9, 
   3.7199240654209085`*^9}, {3.719924114590209*^9, 3.7199241173534045`*^9}, {
   3.719924298892418*^9, 3.719924318300663*^9}, 3.7199245073450313`*^9, {
   3.7199246990827184`*^9, 3.7199247314540615`*^9}, {3.719924827107605*^9, 
   3.71992486154135*^9}, {3.7199249298663144`*^9, 3.719924975324028*^9}, {
   3.7199250057057543`*^9, 3.71992503647007*^9}, {3.7199250730936728`*^9, 
   3.7199251828498564`*^9}, {3.719925255068383*^9, 3.719925290642125*^9}, {
   3.7199253312923737`*^9, 3.719925423620931*^9}, {3.719925473647559*^9, 
   3.7199254902433686`*^9}, {3.719925539076254*^9, 3.7199256727478304`*^9}, {
   3.7199257612013607`*^9, 3.7199257945755787`*^9}, 3.719925941151656*^9, 
   3.719925978100584*^9, {3.719926011641782*^9, 3.719926026247883*^9}, {
   3.719926073964534*^9, 3.719926093391418*^9}, 3.7199262069368863`*^9, {
   3.7199262785390177`*^9, 3.719926394814521*^9}, {3.7199264288584023`*^9, 
   3.7199264648531895`*^9}, {3.7199265263535056`*^9, 3.719926571547472*^9}, {
   3.7199266232949934`*^9, 3.719926674779815*^9}, {3.7199268436330943`*^9, 
   3.7199268453676586`*^9}, {3.7199269021813793`*^9, 
   3.7199269872049227`*^9}, {3.7199270198431463`*^9, 
   3.7199270761106668`*^9}, {3.7199271142508926`*^9, 
   3.7199271314223013`*^9}, {3.7199273107619553`*^9, 3.719927314373644*^9}, {
   3.719927385173627*^9, 3.719927405424258*^9}, {3.719927495384365*^9, 
   3.7199275737908173`*^9}, {3.7199277403483973`*^9, 3.719927823954118*^9}, {
   3.7199280170776367`*^9, 3.719928043073409*^9}, {3.719928201726119*^9, 
   3.7199282350087843`*^9}, {3.719928267930784*^9, 3.719928276974769*^9}, {
   3.7199283795568876`*^9, 3.719928613159234*^9}, {3.7199286551792946`*^9, 
   3.7199286890917835`*^9}, {3.719928740009803*^9, 3.7199287429163485`*^9}, {
   3.71992877666823*^9, 3.7199288392775936`*^9}, {3.7199288886961527`*^9, 
   3.719929003861696*^9}, {3.719964177667181*^9, 3.7199642586018505`*^9}, {
   3.7199658389459743`*^9, 3.7199658560534687`*^9}, {3.7199659152593546`*^9, 
   3.7199659495289307`*^9}, {3.719965998194778*^9, 3.7199660048525925`*^9}, {
   3.7199660580562773`*^9, 3.7199660590095015`*^9}, {3.7199660914547863`*^9, 
   3.719966092861183*^9}, {3.719966130747966*^9, 3.7199661444199343`*^9}, {
   3.7200835724299574`*^9, 3.720083572695571*^9}, {3.7200836856028423`*^9, 
   3.720083685759107*^9}, {3.7201771083302164`*^9, 3.7201771215343513`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {{}, 
       {RGBColor[0.9, 0.36, 0.054], PointSize[0.003666666666666667], 
        AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxd2EvsHlUZx/EjK2IImRhjMGnMQBpCjDEvXrmoHO+IWEe8oUIZQSqCwtCW
UqDgCTRaTTUTvEFFPNYqXZlZsujixLB0MYsuuuhilv/lu2DBgoWQ8/29yfz+
iz759DnPucy8czlz7f2P3fXgFSGE97zzz7vxzMvv/H1wE8O7f+X5GsP2tnUM
/P+VFj9PbGrc+w1+f42n/4avqXH8B95X48l/4rbGy/J1NV48h/fX+Mq/8PU1
Hvw3vqHGq17DH67x9/JHajyj+o/WuF/1rP+sxruxxmPyxxhf8/t4jZfO4k/U
+Kr8yRrfK3+qxnu0/k/XeFG+qcYPyTfXuJFvqfFExrfWeEj+TI13yJ+t8dzf
8edqvF2+rcarXsWxxn044ddfIc95vhMnfEL5L7A+5fH5M+S/WOPRv5LHF3D4
Ev3TPuFTqv9yjX9UPd7/MvmvsD7V49Mvkf9qjXs44YvK317jpDw+pfzXanz7
L+TxcRzuWI+X8D7lv17jrHr8pvJ31nhe9fik8t8g/2fyeL/md6DGN9T/gfV8
wzeZr/rHF3X8uvX8I4463t26fcE36Px8q8ae8x/xTVz/CZ8jX/D/9Pu5q8YL
/P4ifh+/54SfwwVfrevj2zVOOOKXcMIN12/Be2ep/06N/8URn8QJX6F6fEr3
g+/WeBhHvIcT/oDq8dWq/16N/9H4+LLGxwdYT8Ev6nr/fo1vc31HrOs94cuc
j4Lf1Pm7u8ZLOOIL+r3gy3+iHr/1B+p/sHbEl16kHp8bqcft76j/YY2vn6Ye
7/2Wejz/mnq1/xX1P6rxShzx3S9Qj996nnp8nny4h/ES9fganPD8LPV4wuHe
GvMz1OP0NBEPT1GPy3HqD9bYkI84PEk9Tkepw8sTtLuP+eGI+8PU4UH1yuPQ
U3ekxhYnHHF+nDo8DbTDI854gwteHibi8Cjxx/TzC8bHkfqIM+7x8jPq5J/T
DpdHiKrHi/K0D/fTL/Np5YcYH0fm1+OFfMIJZ9X/hHGUf5A6XH7K+A9Qh1sc
cZSp7+VD9Itb8ln9afwH1utc8EI+KPK7aLGOe1T+oK2L6yhhHfds9UX1Ok/K
Ux+Yt64TrUP3mWjusa5bHVfdt7Ly9F8sv6g/7kPh0DrfYl3nOs66L/dY9/2k
9vSXZZ4zReeJ9os5cJ51n29l6vU70HOyV17jyzyX9Dvaja/fEfWL+uM9IDy0
7r81R5n3El0Xeo/Q717vPVmmfTHvrhveU4KuY94rWqz3jIj1HtWrPe9pSea9
Mlu+yLy3LebAfUnvZS3We3GUNb5MfZJ5r84y8ynqX+tXnvkF7kt6j20fWc8/
yrz39mrPeEnW+mX2GboP6r18UZ7+gu6D7BNamX1JtHwvs89I1j7LHL/dfZZ9
ke7T2kcE7qvax7Qy+yzdd3fjm/Xc0L4py+ybisx8F5l9m55D2ve0ei5p/EfX
7fWc0L4uyawvm4t5sf7DY0T2qa3MPjTK7EN7c5LZ92Zzkdn3LjZeGNbzaWTq
W5l9t57rOh56Tmu+ndX3lh9kxk/WfrR8tvEnc5H5jjDLWq/ltzLfDcLj6/4a
me8OrXxdjRuZ/qLMeJ21782D9Z9s/NHaZxtvsnyROX6zzPoWq9+aw+G1G5n+
W5n+NjLzjzLfhTqZ70J6D9V3oMGcrP9R5rtTlvmuNNn4xeY/y3xnWqx+a/MN
R9bzaY6s863MfDYy/UVr31m+lzkeg8z3tWT5UWb+2fqfzMXqZ1vPsps/w9p6
wtF1+0Zm/q3MeBuZ+mjurH63z9D6Za3f+h93/dW/bPnJ6ouNP1v7xeaztfbh
iXW+kXX+ZcbbyFq/zPo6a99bf4Plk/U3mvPO9W+yfLH+ZvNi3prDsXX/zc41
tsfW7TfWPpo7a99bfrB8Mo82frb8ZC7W/2xezFur1z5bf83ONbZPrttvrH20
fGfurf1g+WT50cbP5snqi9XP5sW8NYfjazfmVtb6LR/NnbXvLT9YPll+NGfz
ZC7W32z5xby19uEp5WvUdxjlW/Nm154qc2furX6wfDKP1j5bfrJ8Mc/WfrH8
1vLh6XW+MbfmjcxftHxn+d48mJN5NGfzZC7m2byYt+bwzNqNuZW1fstHc2fu
rX4wJ2s/mrN5MhfzbP0vlt9aPpxY5xtza96Yo7kz97LWb/lkHs3ZPJmLeTYv
5q05PLt2Y25lnX/LR3Nn7XvLD+Zk7UfLZ/NkLubZvJi35vDc2o25NW/M0dzJ
Wr95sPbJPJqzeTIX82xezFubT/jlOt+YW/NGpj6aO2vfmwdzMo/mbJ7MxTyb
F/PW5huS8vH/Xnefow==
         "]]}, 
       {RGBColor[0.365248, 0.427802, 0.758297], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6], CapForm["Butt"], 
        PointBox[CompressedData["
1:eJxd2E/MH0Udx/HBENMDhz300EMPK2lIQwxZoGpVlBELCtS6ImpVxBELFqzw
AwpUKbhiYxqDumLVR62yImIPHjbYQw/ETIwHDj3ssQcPe2iMMRz2wMkQo828
P0+yn+fQb179fmdm//1mdvY9Dzx2z4PvCiFc9f9/rsSbr/z95aYYrvzlF0oM
y60l7sCBuDOu//+DxKrEf/1gXXf5N3hXiS8NeHeJ9/8e1yWefwVfW+KxP+A9
HN+r+LoSb/kj3lviJF9f4j9V/94Sb1L+hhLvkJsS31L9jSVeL3N9juh4bi7x
bzrefSUm+X0l/kfn9/4Sz8kfKLGT95e4V+a6ntf1+lCJZ+QPM558S4mXX8Yf
KfFq+aMl5t/hWzme3+JY4ltnOS78Dxw+VuIF5XGv+3tbie/8mjy+hMPHSzyq
PD6j/IESr1EeN78if3uJ+3GHT26Rv6PEs7jDp35B/hMlnsMdPvBL8p8s8fTP
yeNTONzJ8SqPdyt/V4npDHl8Lw53l/j3n5HHp3A4WOKLL5HHe9T+UyW+oTw+
i8OhEq9WHu9T/tMlXv4peTzg0JbYUB/xpZ76dt1/xsfJh88wHv1FfFHt8RbO
+G21v2ddH/GFn9Aeb/2Y9vio2n+2xNPUR7yl9vgEzrj9Ee3vLfGwxsc71B5X
Gh+fIx8+V+JEPuJB7fFetce71P7zJS4cT8Sj2uNB7S0fvsD4On+8R9cfn9P1
x0nX73CJuj8RLxof/1nt8Sm1/2KJB3X/caXnDV+DM9bzFr5Uop6viN9Uexz5
vWR8Sb+fL5d4nN9LxBf1e8Q1v9eMt+eH+0rcyXwQ8VnNF3gkn/ERzU9fKXE3
82HEmh87fB/zbcanNf/eX+I7zM8Rn2B+7/DrOCv/Cu2/yvHjiDPucMf6lfEb
Ws9Sie9mPazxIRxxjxO++Br94p14wH/FGb+JZ3zgT4z/tRL34RofpD7iJ3DC
hzQ+PszxDfi/rN8ZX+B8Z/xvnf8DJd6Fa/w663HEel9JeB/ra4ff5v4N+Dzr
Zcavsr7N+KTWn69Tx/NW42N6nnHL856w5qsOa/4b8P4X6Rdv/ZDxcaP3tSMl
Lt9nfHz6BcbHO77H+Lh6jvFx/Tzjq79nGR8PTzM+zs8w/oMlTuRr+QnGxy1O
8pOMj3s84PQ44+DuMcbH4VvEh6h7lPHx/E3GV/4o/eL6EfpVnn4HHL/B/yuP
54fW/QT9v64j1nVRP3ruEtZz0WHd90F5XWes52rWcTEPBM5L82yNNa9F5Zl3
EtbvqMOalwfrT9dN8/qs/lkHwsPU4frhdfuoPOtOUp51sFNe42OtoxlrnZxl
1uHAfdS6qvuq96Aos+4nmfeITu2pHx5Z959l8rOeG97TAs+Z3vtqPXcaX3ne
OxPWe11n+UHmPTfLtzG+zHtyOEakfS1zfPHYuj7JvId2qic/yLynZ9XzXj/b
ePod6r271u+S9+gok0+q53w65dlXDDL7oKx69jWz8uxjAr977bvqR9f1UXn2
WUnWPk719DdYveYV7RNnqw/MS9oH1jLHE2XGS1aveU37zkFmn5qtfpbZB4YN
kX1mJet6yOyjG5l9aJTZl7cy++wksw/eyLp+MsffW/tB5nqOls/W/2T9zVa/
yHxXCKwT2vdXMt8RapnvDI3M9YhW38p819A6pO8iG5nvCp3M8fUyxzfIXN/R
nG28Sb62xNn6W8yBdVXfaSqZ/mqZ8RrLR5nxtE7rO1Gy/MbadzLfhXrzIHN9
R5nrmc2TeTYvMt+tAu8N2+dvrs2NTH9R5vz0XqLjTzLXYyMzfmf96T1G390G
82jjZfNk/c82/rLdH3/Hsc5f5vmoZb4LNrLuv+VbmeNNMsezkTnfztr3su6/
9Tda+2z9T5afrf1i9eEpItenempdX8s6/+08VVbfmpN5I+v8rf/ePNh4ozlb
/STr/lt+kbnf4el1vjLX5kbWWVm+NSdZ99/ynfXXmwfzaO3zdr7EyfKztV/M
4Zm1K3O97RIbmf6jubX6ZP1tzJ25t/4G82j12fKTebb6xRxOrOurE+t8bfnG
HK2+NSfzxtxtu8Te8oONN1o+myfzbF7M4dtrV7Kef8s35mj1reWT5TeW78y9
1Q/m0eqzeTLP5sX6C99Z5ytzbW7M0dyak3lj7mTNf5YfzKM5myfzbF7M4dm1
K3Mt6/m3fDS35mTeWH+d5XvzYB7N2TyZZ/Ni44eT63xlrmWdv+WjuTUn88b6
6yzfmwfzaM7myTybF3N4bu3KXJsbczS35mTemDtzbx7MoznLmv8tP5sXc3h+
3b4y67ue/hpzNLfWPll+Y+7MvbUfLD+as3kyz9bfYvnw3bUrc21uZK1/lm/N
ybyx9p3le/NgHs3ZPJln82IOHd4V/weYjqnm
         "]]}, 
       {RGBColor[0.945109, 0.593901, 0.], PointSize[0.003666666666666667], 
        AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxd2U+sHlUdxvEjYdFFF++iMdfExUgIaUhDRq1a/3KsFStWHWrFC1YcEeSq
VUYtUrHosfFPVdRRK14QdcRqupwYQm4IMWdhTJezIKYLFrMgpgtj3gXLxlhy
vs9N5rkLfvnwnD9z7vvemTOnb7r/4eMP3hBCeN31/7xWn37q+s8b3hbDaz/5
XKlhfXup+3CgvpG6h/oe6qrUre/FRb+dC3ij1NVTy3HOPo2rUm98Bt9U6t4/
4JtLvW3At5T6zz/h/aXeIt9a6kvyAfNtpW7Kdan/1fhvLnVbfkupL8hvLfVW
+WCpR/6I+X2+9Hv89lKvaD3vKPWa8kOlPiG/s9RJv493lfqK/O5Sk8zn8OLv
8HtLreT3lfqyft+3l7qlPDIeecIn1P79pW4rx//R53m41GeU426b/AOl1jjh
K0+SHyn18m/JcVL+wVIPKMcP/Ib8jlL/gdMd1v9Dpa6U4zP6fh4t9SJOOP+a
/MOl7lWOj/yK/M5S9+OETyv/SKmHlONe+bFSDyrHx35J/tFSd3pyvKH8Y6W+
qhxfwOHjpZ5Sjrd/Qd6UeuXnpUa8Q57wFv0zrtT/LtbzM/rftRwv4Q2c8SHa
h+OlbjJexPEJ+uOG9hnnn9L/E6WexxFv/YT+lme8Qx5OlDrhiI/SPuHwY/pb
+/DJUgfyiHuc5PP0x+sf0v/uUvdoftzp+nGr/vjoj+j/qVK3ySMecML7aZ/x
yPWFzVI3uZ6It9Qf9+QZn9f895D/gP74Eu0TDup/z3K+cG+pta4fD4yX7l2u
N+NEHj5daqPrx1c1P641Pz6v/idpr+s/uVxPwjs446z1fwarP07fp+INzY97
8nBfqVu6/vuW15uUa/140vyfLXVQfxzJE640v3L9/ttSO9pX7bJ9NLd49/uB
L9N/wIf0fcUD+Yz1fQyfK/UK41d4Q39PODBei/fo7wsfJR/wWvOrP3/Ps9rr
7/d+5iWv8CXdT3DN/afFl3V/wpl8wLp/Zdxwf5vxft2fP1/qzbjCV3HE+7jf
t/g5nHDL82PAGWc84Rlf0PPzAebHFd7L8zriLZ6nLY56nuNL7AcGfJL9QJbZ
b8x40P7lwVL3sH+q8DaO+AT7rRYfYP+W8OFnGRffiDO+hmf8Cg5fKPXqn5kf
/x1H/LeLzI+f/Avz4w4POOKMz+EZ3/lX5n+o1NfjCv8LR/w8bvFpnPANeMA7
mh//T/Pjf7OesFXqNa0fX9T68fPPMj9+DCd8nM9jwHfzeWX8KvvfGZ/SfveL
pe7j+1HhS3x/In6O/V+LD/J9TPgY+7UBX9b3H2f+nma8rf3HlxiX+0GFRz2P
sO6vLd7U80Htz9EO14l5cTzL/Dg9zvxf5v8/yvy4OUM/nB9hfjx+nXFweJj5
8YCz/FXmwfEr9Du1XFeF9b2JWH+HrdqTJ6z7zqD2ug9h3ddmrPtm4Dr03Kuw
ngO718m+pbX2Sea5PmA99zPWvmFWzj4q8HvRvqjC2kdFrH1Qq5z+Sbn2gcq1
T8Xap87KsT437UMrrH1zVK59oHL2+Uk5+/rB8izz3jTLvEeEjsp7ywrrPaqS
Ga9We95jonLe6xrlvCe2Mu9dnUz7JPMe3Gs8+g/mUe15T8wy65vU/nCps7Vf
y7xHh68tx19hvTdXMtdXy7zXR5n37sbyVua9upN5D08y7/G9zDnCYPOP1j5b
PsmcW8wy5xprmXOGwH1E5yYrmXOOSqZ/LXOOEWXOaRqZc5bW8k7mHCfJnMP0
Nv9g/UcbP8uc80wy50Kzjb82h29QOYdayYxXyZxb1dY+ylq/5a3MOVkncy6W
bPxe5hxtkG8qdbT5suWT9Z9lrd/ycJrKOd/q9DKvZK1f1votb8ytzHo7659s
vl7m9zXY9Y2WZ/NknmXOLdeWh0eWXsmcg1aW1zLXEy1vLG/Nncx6k6zP39oP
Nv64m5efbPlknmWt39YXvrnMVzL9K8trWeuXWU+zm5ef1sbrLE8y19ObB/No
/bPlk13vbPnaHB5deiWzvmrX5ae29lFmvsb6t9a/Mydzbx5svtGczZN5tvHW
5nBm2X4la/1nlu1rax/NjfVvLe9svGR5b/lgHs3Z+k/m2by2/uFbS6/M1a5L
rS2P5sbcmjtzkrV+ywfzaM7WfzLP5rWsf8d5bDneylyZa1mfv7mx9q25Mydz
bx7MozmbJ/NsXpvDt5demSuZ9dWWR3Njbs2dOZl782Aezdk8mWfz2hzOyqWu
ZD3/zi7b1+Zobqx/a3lnTubePJhHczZPNv9s+doc9B6u+9/jy7wy1+Zobsyt
ubP5krm39oN5tPbZ8sk8m9fm8J2lV+bKXJujuTG35s6czL15MI/mbJ7Ms3lt
Dt9demWuzLU5mhtza+7MydzL2v9YPpqzebL+s+Vrc+Cc6vrz4P/GJr4V
         "]]}, 
       {RGBColor[0.645957, 0.253192, 0.685109], PointSize[
        0.003666666666666667], AbsoluteThickness[1.6], CapForm["Butt"], 
        PointBox[CompressedData["
1:eJxd2D+MHGcZx/EXqi0QmiLFFSkGy4pOyEJDEuAAQ4YQwvF/CQEMXGBibDBw
kIUY2ISQvJgABxgYwMABQQwmxRUppkIpIvQWKa6c0kIUUyDkwsUUKa5AiIT3
+1tpflf40cfP+z7Pu7O7s++8rzv/yAMXXx1CeNXL/7wS7/r/31vq8MpfupJj
mO7J8TYciAVxQbx7/v/NY/Vs3vbP8FaOp3+Fb8/xhV/jEl/Dp3K87Xf4dI7l
7/EdOe79AW8T/0h8Pf3+hM/kePQMfkOOZ+Qqxyc0/405Hqj+ncxX/q4c97Ue
rsPxIX5Tjv/U+t+c4zPKc72vKr+T467qvTXHW8q/LcdKfnuOL8hnc2x+i9+R
47b8zhxPdH3vybH8Da5ZH+Mj/o/GvyvHM4yP+EXNvzfHy4yPeK35787xgvL4
qvL3UV95XCr/nhyv8XmJ+LTy91NPefy0Pm/vzfEsjnhPn7/dHOtfksf7OLyP
qPn4UPn357jVksf1L8h/IMe18nhU/oM5Tsrjg5+T/xCvR3l8Hw4fzvEm37eI
+6vkP5LjEY74WPWXOS7I1/jSTxiPt6if8KD6H83xRPPxlubjNU748KfMf4D1
4xovfsx8nHDC4wHzP0Y/8jVuNR831E94ofkPUu9HzMfb5CM+Rz7hgMPHczz6
IfPxLvmIhx8wHwf1/0SOBa7xRL2IK/XHC/Lhk/P6tTnilvEJ1+TDuRxvfJ//
x4Xm40rrx8eMD5/K8UTz8SUccXia+Xit+Z/O8egK8/GO5uOEk40Pn8mx0Xx8
8j3m4wP1x7vqv5fjFJm/N68X8TH1El5o/kPUU3/cqv9D8/UkmX7hs4xXf9zj
iBvNxyX9wudyPEe+xluaj4PmK49Dw/oZX+Id1cPjU6wDr/X68Ir5XTNfT9J8
POJO/R+er6fES10PfIN8gyu9Ptyxvu7h+XoTbhg/Yr3f4fzcJd5Wf3yAG6z3
K+L0JP1l9cdB/XGh1/95xun140vqj3W9G6zrEfFNXX98jBMe1B9Hvf4LOer9
LnF7hf74hl4/1ucxXpj36zRf/XGp9x/r+xIu5nik/rhQ/4vz9TV48/3EW7jD
QfcLzSc/4uf1/f0C6+H+UOJD3c/wiBtzxB3usO6PCS+oP6qf7t9fzHHN/bXE
J/o9wQNusH4/oubze9fhWr+XuOX3d7R8uJTjDr+PJS70e45b9gsNfp7xEW+z
n+nwZfYnCd8gP+IT7Z++lOMxLvGC/VmN99l/NfhZ7ffwLfaDHb6d/WlSPfbL
I97sn79MPfbnJb7F/r/GJfv/Bp/l+SHiF8l3+PSf6Y9f4nlkxOuO/l/JccAl
/geu8dZf6I//jqPGX6c//i/5hO94lv747F/pv884XOKbuMb3M7/Bz+GIX2J8
tz+vn/A19ccLHL6a47/VH/9N/fG/cIPvxBFP1+mPr+OEn+N6jPi1OHwtR13v
Er9G1x8f8f41+ByOuOLz0OEH+fwkfFOfP7yr57NHqM/ntcR36/OP9/T5x52e
B/BK3z9ca7+Otd8d8Y7uPyvmc38q8PEV1oMPuZ9XeMnvW43DE/w/HtesF/ec
D6w0/jLrX81jqzyxUz3et17juY8krPvWoPHniVj34Un1+R0KX2c++5IC63e9
VF77Dqx9Xy0zfymzT29k9o0r1ec5IGLtq1us54BOeZ5benMyDzLPaaP64Unm
OSp8A/NcWMg8p5ZYz+GVzHN2LfPcuZSZ36gez8Ur5XGU782x1XjOATrlcW/r
STZ/kDmnGFWPc43JxodHiZzDFDLjS5lzmUrmHKZ+dF5/aeMbmXOZlcy5TrR6
rcw5VCdzztPLnGMlGz/InFuNMudok8y5l76HGl/InKuVMudaleVrmfpLmfqN
zLncSubcL8qc07VWr5NP5djb+GQeZM4JR+s3yZxLhm/O84Wsc0eZepXMOWkt
c+65lDnnbGTOTVfmKLOeVj6VY2fubT3J6g22nlHmHHeyfPgWkXPcwlzKXJ9K
VlXLLzf5HBtZr1+mf5S5nq3M9eusXm/1knmw9Y9WfzKHb89dyPQrZepVlq9l
vf9Wr5H1+q1eNLeb+vmvs3q9Odn4wfqNtt7Jxof13MXGOZYy/SpzbV7K9G+s
/srGR3Nr4ztbT29O5sE82nomqx8em7uQWU9p+crytUz9peUb88ocza316zbO
sbd8Mg/m0TyZw+Pz/sXj83y5cY6V5Wvz0tyYV+Zobm09neV7czIPNn+0/GQO
35m7kPX+mysbX1t+afnG8ivLx41zbC3fmXtzMg/m0TyZtW/XX2EuzZW5Ni/N
jazXb/lobs2dubd6yfKDebTxk+XDd+cuzKW5Mtey3n/LN+aVOdr81vKduTcn
82Aerf5kDk/Oxxfm0lyZa/PS3JhX5mhuzZ25NyfzYB7N08bEp+b5wlyaK3Nt
Xpob88ocza2s+5/le3MyD+bRPJl1Lv3yK/kfHircJg==
         "]]}, 
       {RGBColor[0.285821, 0.56, 0.450773], PointSize[0.003666666666666667], 
        AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxd2TmM3kQYxvEBUWxB4SLFFhQmitAKIWTuBQIZ7uU24VpuE3IsEIgJRwKE
MIQbAph7gWaKLVK63ILCZQqQXFCkoHBBkdIFRYoUEM3/seT3K/Lqt+9c/uzP
c+TiXQd27jnfOXfe//+ci3/+ce5zvXfnPt2xFN24I8UF7IgX+fnftxGzFKtX
8ZYUl9XeYoqnPpm3Ez7DeYr113gr9b+Z93PkW3xJiovf4aUU93+PL03xD/ky
k788xbOqX6S4Jl+R4j/q78oUdyt/FeNv8NUp/qvy16R4WvlrU1xQ/roUV+Tl
FE+pPPdjVdd/A3n5xhS3qfz2FHPlbzLjuznFpa/wjhQ72dP+l9TDXvlbGO9x
8rhV/lbqK49L2nO3pTh+QR5vYnc7f1d9vIrdHSnWn5PHq6p/J39XHjd6vu5K
MeKAN5VfSXFReXxGz+vdtIcDXlf+nhSXPyWPV7G7N8WTyuNa9e9LMf+YPK6U
v5/6yhu7B1I8oTyOH5J/MMW1j8jjAbsyxYz6HjfUD3gBd7hT/Ycof4z6eFHj
wWc+oB4+TXm3k+tVfVyrf5Pv8BLtuYdTzFUfL+GAC/WPo+o/kuIa9ng9UB83
qo8H8u7RFD/DHi+oPh5VHw/vU/8xxqv6+LDq4+w96uNl9f94ijl5jyPtB1yr
Pi7V/yrjwx471cfxCPVx9S7lnuDvR6mPHf0FXKu+sXty3p7H7TvUx5F8h736
fyrFnvIel29THxfqHwfKu6epr/6xU/+4Okx9WfWfoR55L9NeMPkOZ4zPPWvG
jwPlg/KHqI/bt6j/HPVozz83H2/Ahfo3dhX1aC/HQe3hlvIVLikf8Ej5iLs3
ibhi/IPKa/zPc31v0D8uqO9xoHyFO/WPI+UjLvV9YU/7A86x25Vio/5xwB5n
tF/hmnzAOeOJsq4fj3jAA3Yv4Neph/X9eqzvp8Ij5QOOOOKK8h3W/R1wq+vf
zfWof6zvy+NwkHZlXT8uccQd7XVY93PAw2v0v2deP8cN9f2e+fgq7Ggv4F7X
jzNdv8z4B1xhtzfFVtePvfrfO7/eau+8/YCjrh+PtN9hPS8DLmnf7ZuPP8e5
+se63xV2uv9Y32fcNx9ft8/0b8q7tfl4cjx9/7KuH+t+Bjw9f3h6/nCv7x9P
z9+L1NP9x9P3L+v3h/V9Baz7E7Gelw43ev5UXr+/l+hX7z9Z7x9c6Ppxo/eP
zPsxYr2fOjx9/ybvXsa8r3Ks96XHAVdY7/+ANb9E5fX+w5pvBrWn+Ws/Jp/j
Xu9/POj9j0faD7ikvShrvsY58++AG9YH7hX+jnPcaD2CS/IVntYXWOutiBdx
h0c8mLxj33oS57g/Rv94jbz2uadZzwVcsF6NOGi9jJfxgKf18wH6Zb2c4xX2
Cx6P7E8qXGm/gpfYD0W8yX6oU5792ICn/VWd4gL7uQzn7MdzfJr9ZYHPYI9P
sN8s8d/sbyu8wf65xsd/YPzqn3yD/yEf1R/79xbXP3J9eBP3uPmJ68Xbf05x
VH/kHe/B9fUUMzziXO/JX1Is8GHs9d7FJc5+S7HC/lfGjbfggM/iBve0F3FB
ey0+RfkO/457vEF5vedX8Yhr7A7O+9c8eSHO8Rlc4AXqe7xCvsQN49c8q++z
xn9xP7SuOMH9aPAG9zNqnsYtXuf56PAWng/NMxeQH/DVPF+alzd0PsI8scTz
nmne4fnWPHyK31eBB35/mqda9uuaRzN+3xUusOal8liKQfMm7xfNu9rfaV4t
eL9qnVJrPa/2mA80L2pcWlfqvk7rRj3XmpeYF7Vu0DyRm3WE5kGty6Z1IvuK
aR24K0WtA7QP0TyofZLmbe2LtM6Y9rHKc26gdYP26Z3WEZxLaJ2sc4tB5txk
VHnOQbSO1DmP1vk659I6QOdGWvfo3E3rkuncS3nOoSrldY6lPOdswfSndYrO
AbWv0bleK3OOqH2Wzgl7mXPMaZ/BOaP2ITq3dFqHcM6ZyZyjal2kc9PClNe+
Queweg51TlrJnLPWMuey2tfpnFfrKp2jRlN+2vdyDjytozh37k17g7mead+5
lXhoPv5Mpn5+aF6+kDnH9jLn3KWx1nHTObfMOXsw5RvTf5Q5Z2+NO1Nf5wQ6
tx9MfpzyfA7Py2cy7ecmX5i8N/nSWOcQ6l/vLf0/QjB5raN1P6Mp35r2O+Pe
eDAeZf0/x9vzfGacT06fwtgb69xJ461k+qtN+WDKNyYfjVtTvjPt92b8g6k/
mvI659InM86NNQ+pf2/ypfF0TqbrN/lpH8Lz1Jjy0ZRvjTsznt7kB+PR2L07
dybTf27yhbE3Lk39yuRr4zA5xcbko3Fr3Bn3pv/B5Edjd2TuTNb1m3xh7I3L
ySlWJl8bB1O+Mflo3Bp3xr0Z/2A8mvLaR+qTGefGhbE3Lo0r49o4GDfG0bg1
7ox748F4lPX7Pzp3dnRePjcujL1xOTnFyuRrkw8m3xhH49aMtzP53ngwHk19
/T/HdP3vz8vnJl+YvDcujSvj2jgYN6a/aPKtyXcm35v8YPKjsdM5yLjjP6MY
+VQ=
         "]]}, 
       {RGBColor[0.7, 0.336, 0.], PointSize[0.003666666666666667], 
        AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxdmTmzHUcVgBuiF05AoIBgcFHUK4qiBswiVje7DAYGY2MZsBmekRBg7DG2
sbC8DGITW9UNHU6o8IaEHSqAqhsqnFDh/ATs6u+bqjk3eKe+d5Y+09t0n/nQ
xYuPX3t/Sul97/55T/7vv+/+HvtiTu/9yu0q0/rIXib+fxbkJWSDfAb5gSr7
3+/tyi34g1XemeC2ymz7D1V5+U/wh6uc/wJ/BPs78Dn8D/ijyL8jP1blqP7j
5CN3Vf5H/kSV53+DP1nl0XgPV/mO7X+qygd/hT9d5X35M1Xekz9b5RWf53KV
d+TPVbn8Gf48+ctfIH/7h/G7exv+UpWr+i/zfOofCfFzlTP2E9xo/5UqW3iC
r6r/apWnP6KH7zu+X6vyzPjwov/Xq+z0hxc4faPKB8Sb4Kz+m1XeVA8f3kL/
rSrLm+jhq+Z3pcpz/eHyBvpHyU89nN9G/230tDfBq/P9O1U2xJvg/nX0j1U5
/gE9nOD03SpP2E9wuon8XpUHeIJn438/6OFGfc//X+O54IH1O8Et+RR4fQX/
HxBPf3jRH+7gArfYp8d5PuJlOL2Kv3q4wMX95YfER5/hUX+4J36Bj+b/BHa2
D7e/4/9P7OMVeIDTk9jZ/pP755ng+WX84cH2fwTTXoZX24fnl/DXXv+nqtye
H060Nz21f74Ct+jT1SobOMNH/a/u8ytw+wL+Twf/p/f2E9zZPtzb/o/3z5fh
Fp7g0f6DF/TpJ8Efbkf81cMFPsDpp9i/iD9cfos/fLT/4az/M3v7DC/6wy1c
4In20rNVDvrD9u8Ez3CRf4P/z/b2Gc76w+V5JDzBaSDfXxMHnuAsk98AZ/ST
jH7WnvwK3N6gHXiw/Z8j4RZuf0VceCHeAM/oJ3ggnxkutFf0J78FzvinC/zh
Fl5sP+gHONn+xT7fGS7XkfCEfjH+L4jz3F7fwssvaR+2/wbZ/n9un8+sP1xk
8lngQvxEHsX24YH2soz9YN7wBC/XaB/O6EuIvwT/hN9Afu21vX+Gi3ZK4kyw
/TCbx/XgZz9ob/vX99zK2Gc55Glek/16sW/XcXMeuC6W4J9Cv7ahX+yHzQ5p
P5q3827Wzn4L/ei8ch4kxnkO88xxy7LPH+ynG/t8Z9nnd907TwI7b7d5Hth1
6ni4Dpewbhwn9wXzcd6lsC6cJ8l9Lqwr54X7nO25z2zzCHZ+zbDrvqi3/0O8
xL629T9s/2TYfWaAt3ka/H0vuO8VeBt/44d913xb2H00w9s++/ze3/fIti+r
J57vHcdxke1/92V4e0/6/LD7ou/JbfzVuw5k9x3fw+Tje8B1knhPOh+2967r
xveq7Qf95DnI9mXnH7zN/xf2+SbOAe4TnkPcb7LnBPd/eBt/zy22r7/Pr73j
r73rlHOM676R3Q9h11cHb+9Hz1XY9/r7vpSZ96P2tDd5TsPec9k2r2H3vWPI
t5gPfPJc5jrTn3irzDxIniOZlw3sOvAc6rzsZPtRZlx72HEYjI//+NLeb0La
rwf1+HuutV88hzoPi+dS9KcQz3Oy47Qaj/N5Qnpeb7yH+Fwy5/cO9vye4QPc
w/Mr+7je50btvZ/Jr+3z6uEZPsJHeLuPmh98gjvu34vtc9/1XrV4//Vewf3c
e8wV7vvek0bqBx08c//P8CXqEfZLgQf4dJs48E14Cvb24w3qJXNg72Un6kUF
PqO+dDIf6lcLfI5+tX3rW4zTXepZDWx9q4WPsPe4Hn/nxQPYe/ZKvcx76hn1
tRE+/2eV3kuvwAfvzbDz6C7svX0hXoHvoffebb1vcR7+i7xCe87LO+gbuP03
Er6PvffsBvvsvIZ7eMDeOsEMW0e4T37WDRL+rovL6Gd4e374Hv1btPf54Xcc
f5/H8YfPrGdSR1nQN3CDfwtbr7SOY702W+dBb913RL/VkVhPI9yxfib4EvoD
PLB+Z5n1d9QfvXWggfrWCXb/sA7luK7m576Mne8F61jbexH2HNep91wF+z7e
9q0L8pJ5/46y5yfrZtQF3Ae9p8/qqdu4D1rXKeZj3Um2DidTd1wDb3VE6paN
dULqtK166qadTN05y9SNe5m6tuNiXXlUT918Cmyd0rr9LFOnP8rU0YtM3fwk
851gCfFW+SGkdVa+SzQy3x18z2jfyXwHycG/l/kOMgR767x+95gCH2S+m8wh
/jHoS8jvFOwXme84q+x3m9f3vNWFsW9l8u8C58B9iDcE/SjzfWna2qu/Q/Cf
Qz7HwCXEOwVeQvw16NOtPTe39vZt0HeBc7DvN65yCPox+E+BD4Hn4H8MXIL9
KeiXoF+DPr2x1/udwl8b9F3Q542r7IN+CDwGnkL8Q9DPQX8M+hL4FHgJvIZ8
05t7fRO4DdwFzoH7wEPgMfAU+BB4DnzcuMoS9CfZ+R/0a+D01p6bwG3gLnAO
3AceAo+Bp8CHwHPgY+AiO/+Dfgm8Bk5v77kJ3AbuAufAfeAh8Bh4kp3/QT8H
Pgb7EvSnoF+Cfg2c/A6a8v8BMb8EEA==
         "]]}, 
       {RGBColor[0.491486, 0.345109, 0.8], PointSize[0.003666666666666667], 
        AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJxdmTlsXNcVhq8DBAhcDYwISJEAL4EdBAPHGMdWNjvm8xLZkmVntFArJT5S
4k6RjxzuWniTAClcTaP+NWkmzQCB6rza1TTsX5NG1TSqE5L3+ymcw0IXv/6z
n/vuNj+fXb8694MQwhvH/5yMH5z8/fuTPJz81X9LYxhPTJ7+vZpIOOQW/8jh
Fnr3GH+c/2tw/NdeB/8k4cEm+Kf5KfyuB84S/n4P/Itk/9w++O38jZOheAb+
ZeKPIvhX8H8HtxP/zj/A7yb8T/HvpXgOhDv5jdN0hN9P8q9Uj98w/pXxA+f/
wxT/S8V3Po1R/G/xL/y75P+7Q/Dvk/8j4T9Qr6fgP1If8R/h7wn4Y+ot+T8l
fOkA/Emy/0L8BPmKz1N8z8ExT2O+C/9p4l+I/zTZf6n+fGb7Fz9L9s+pn5+T
j/jPGXfgv0hjg7/4BfNL/v+cxmwbXlj6F6gH8yleoD+aX1+Szxb8lym+bXD4
Cl76X9EP8RfJn/kbLzr+EvFuwF9K/HPN96+xX8J/7b6Hy8wH6V9O+bwJDt/w
/2uM3/B9gMO3aaxl/1v4R/B/wT84gusV+C78MmM3/9/J3yF87BLvKnrIR9m/
gj/k8yuMivdK0l9eQh8+LqJ/FbyAHriGj1fT9x2lf5V+S/+atZ9fQw578Zq1
X19jfoDDdfLDXn6dfso/fHse/evJ/2AO/Ul46U/Sf/mHH0h/EvvgcCPZWwbn
N8gH+1FY8d9g/kn/JvV/iP7N1L//PED/prVf32RU/LfQRz6/xSj9W8nfJPZr
+HoW/dusH/J/m3ilfzv5b4Nrh8Md1hPs5Xf4f+nfIT74Gvm2/N/l/2fQv0v9
C/TvUn/p36X/8GGKfoLzKfxJf8r5nyJe/J3te6rfPXjp38Mf8vU9m2+4T72U
/33+fxp9+Db26vv0Y/pMLs0n9PJpm0+ctvL1tI0vFGd2TodMevQhF4/9oiCf
KeRe1+l0rArqTV1qYew10lefZ4iXPmYzyCsf1Zn4ihnyRT+KB1czNh7NC82T
Zsb5n6U+xJvN4h/9fNbaK2ZtvFHyfBeV5F9/JylecOP8Hc+bFM9t/D+w8sff
Yfreb+D/9XeRxgc2n+oB6yX2avQnwY3sYT88tPFmD8lvEv/ir+P/oY0vimed
rYTRr7HXhm+EWYfCnK1fNpfiD/Lv+EJY6/qcrU81Rz3kX+uc/GtdhQ9aR9kX
s3lrL5+3+sU8+aMf520+1bytRz1v69mgfwQfFrAHzoTlfwF99s1iwcZ3vK+Z
elXoHyF/vA+metG/ZsHWLywiz76evd5Xk/9F/MMXi9ZeBLfhK+2byn/R9qNx
9sMS+tjLHM7Z19WvAn5Av+KSzadawp/OEUu23o3swwfOPZF6ZQ4fn4tMPQuH
47K1V4EH8r9s69NgX/MtrPB9av6t2H7kK3a+FTq3yb94zoHVCv4v43/F9q9x
576wanG2auPP4aP6v4o/+V+18VfS51xdg9vIN5LnXBx0jpT/R7ZeZ+dW1d/x
x+fQFI/m3yObb+34xvkL7hydrSGv/B0u1mx94pqdD9Wa879m52sjjL+wbvuV
cW/W95PrHq36r7v5v27nS7Xu/K+7+bdu+xdK+721SluvrKRf3EM63DN0bj++
1xh/Xd1D1K/Srv9l6fpX2nr0S7veVQ4PSxt/7eyNSrueNqWt77i09Qu6Z2Gv
tWH7nW3Y77vjcC59/HU3bD0L3euQLzdc/6TP99B3/qsN29/hhlvfZJ/4R7LP
/tDIPvGMJa/5v2nnc0v3XK2Huqeq/5su/032I+x3N+m31qtN249S9rV/yj76
ffHK3/FD8brHbNr9ZSQM30gfPN60+2XoWdzqMd+1H/WYf+h3ena/17uB7Hd7
Lv+e3S/Lnq1X7NnzQR/5ts5zepegn8OePX/V4CPOoyPp67zZs+e9cc+eB4Pe
MbDf2rL1y7asv47kdT7dsuf1rpMvtnhPIL4S+bbOz9LnPNzfIl7O+9WWjX8o
rPuF4sH/CFxzL2m27H1orPx0z9q296HWNvfHWfLn3Un3oM62vR/m8AH5ruS5
dxTiObeXYN2fo9614PviOUdXxHMEHm7z/qH7tOxz7hzJP+8FjeIFj2Vf57Cd
1J8JcGvHvo/onS3n3NDZwT/ngnzHvr90d+z7UYG95+Byx75fRfAk9vrYG7Dv
VfiP4KHja8XHujYShm+Qb7MvjXfor9ZF3hm1zrTAGXwGLuA7u9af3km1DnR3
k7/vwcUu7zHgcjf5P6/vepd6Y68P/wq+wn6N/yH2l+Fr52+EvRf0uXF4DH6l
dZF3Wb2Ptvbse2cGPk9dO3usl5pnklf+2CuwV+zxHq38wQO9xzr5vuTBlcPD
PfveW4MvEe8Iew18o3do9MfEe07r9r6tb2uf/ih/+Ir+dPaZT5wjc3jNz+4+
8TG/C72TI1+Cz87Vzl5f9rgnVPv2+x06XCt+7rUj7L0EN7LH+jCGX9a7iN71
WU9aYK13mX4nQL5zYN9/8gPiZz/pHtj9tDiw+115YPfH6OT7B+48j/yA89EQ
e5MXyVvx8TvCyMk34i+QP/EO+N0rPMYfv3u0HmN/gvyFPyJ/4V+Tv/TfJ//H
2H2X/B/j70Pyd/JR/HvkL/23yV/y75C//P+M/B0eST8jf9l/i/xl74fIPbF8
64nlM+Fz5C/M73+5w139LhXI3+FS8v9N8tH56zt7leJ7k/ydfu30R2f+0l/j
7I1dPOGp5VtPrX721PrrOPnc8d0zffJ39kqHo8N9hyuHh85f7fiRw43DY4fD
M4tbDmcOd55Z/7njuw4XTr50OD6z9ew7/crhocO1wyOHG4fHDodDi1sOZw53
Dl3+ju86XDj50vHR4b6Trxw/dLh2eORw4/D40NY7xDP+/yTzWyU=
         "]]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {85., 2548.}, Automatic, 
         Scaled[{0.04, 0.04}]], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {135., 2978.}, Automatic, 
         Scaled[{0.04, 0.04}]], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {185., 2923.}, Automatic, 
         Scaled[{0.04, 0.04}]], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {227., 2646.}, Automatic, 
         Scaled[{0.04, 0.04}]], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {285., 1769.}, Automatic, 
         Scaled[{0.04, 0.04}]], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {337., 932.}, Automatic, 
         Scaled[{0.04, 0.04}]], InsetBox[
         GraphicsBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
           Thickness[0.2], CircleBox[{0, 0}]}], {386., 355.3333333333333}, 
         Automatic, Scaled[{0.04, 0.04}]]}, {}}, {}, {}, {{}, {}}}}, InsetBox[
     TagBox[
      TemplateBox[{
       "\"\:2116 2\"","\"\:2116 3\"","\"\:2116 4\"","\"\:2116 5\"",
        "\"\:2116 6\"","\"\:2116 7\"","\"\:2116 8\""},
       "SwatchLegend",
       DisplayFunction->(FormBox[
         TagBox[
          GridBox[{{
             StyleBox[
              TagBox[
               FormBox["\"\:51fa\:5c04\:7a97\:53e3\"", TraditionalForm], 
               TraditionalForm, Editable -> True], {
              FontSize -> 8, FontFamily -> "Times New Roman", FontFamily -> 
               "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.945109, 0.593901, 0.]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.645957, 0.253192, 0.685109]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.285821, 0.56, 0.450773]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7, 0.336, 0.]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.491486, 0.345109, 0.8]], 
                    RectangleBox[{0, 0}, {6, 6}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {6, 6}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.003333333333333327] -> 
                    Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontSize -> 8, FontFamily -> "Times New Roman", FontFamily -> 
               "Arial"}, Background -> Automatic, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> False,
            GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         TraditionalForm]& ),
       Editable->True,
       InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.9, 0.36, 0.054]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                 False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.365248, 0.427802, 0.758297]"], Appearance -> 
                  None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.365248, 0.427802, 0.758297], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.945109, 0.593901, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6300726666666667, 0.395934, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.945109, 0.593901, 0.]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.945109, 0.593901, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.945109, 0.593901, 0.], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.430638, 0.16879466666666665`, 0.45673933333333333`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.645957, 0.253192, 0.685109]"], Appearance -> 
                  None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.645957, 0.253192, 0.685109]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.645957, 0.253192, 0.685109], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.285821, 0.56, 0.450773], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.19054733333333335`, 0.3733333333333334, 
                    0.30051533333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.285821, 0.56, 0.450773]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.285821, 0.56, 0.450773]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.285821, 0.56, 0.450773], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7, 0.336, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4666666666666667, 0.22400000000000003`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.7, 0.336, 0.]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7, 0.336, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.7, 0.336, 0.], Editable -> False, Selectable -> 
                 False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.491486, 0.345109, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.32765733333333336`, 0.23007266666666668`, 
                    0.5333333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.491486, 0.345109, 0.8]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.491486, 0.345109, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.491486, 0.345109, 0.8], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.71788, 0.568653, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.47858666666666666`, 0.379102, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.71788, 0.568653, 0.]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.71788, 0.568653, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.71788, 0.568653, 0.], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.70743, 0.224, 0.542415], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.47162000000000004`, 0.14933333333333335`, 0.36161], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.70743, 0.224, 0.542415]"], Appearance -> None, 
                  BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.70743, 0.224, 0.542415]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.70743, 0.224, 0.542415], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.287228, 0.490217, 0.664674], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.19148533333333334`, 0.32681133333333334`, 0.443116], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.287228, 0.490217, 0.664674]"], Appearance -> 
                  None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                  DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.287228, 0.490217, 0.664674]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0.287228, 0.490217, 0.664674], Editable -> False, 
                 Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.654859523419136, 0.3847547579319916, 
                    0.007695002170097091], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.982289285128704, 0.5771321368979874, \
0.011542503255145636]"], Appearance -> None, BaseStyle -> {}, 
                  BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                  ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[
                 0.982289285128704, 0.5771321368979874, 
                  0.011542503255145636`], Editable -> False, Selectable -> 
                 False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.39178268838668523`, 0.1918189666580054, 
                    0.5000463798308615], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.5876740325800278, 0.2877284499870081, \
0.7500695697462922]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                  Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[
                 0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
                 Editable -> False, Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2841392401197862, 0.3721035206671719, 
                    0.18519978202780152`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.4262088601796793, 0.5581552810007578, \
0.2777996730417023]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                  Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[
                 0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
                 Editable -> False, Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6287658362508575, 0.27637059755855536`, 
                    0.04760552703913903], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.9431487543762861, 0.414555896337833, \
0.07140829055870854]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                  Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[
                 0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
                 Editable -> False, Selectable -> False], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.27664958093414427`, 0.262421431671568, 
                    0.5228662519410061], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[0.41497437140121635, 0.393632147507352, \
0.7842993779115092]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                  Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                  With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[
                 0.41497437140121635`, 0.393632147507352, 0.7842993779115092],
                  Editable -> False, Selectable -> False]}], "}"}], ",", 
            RowBox[{"{", 
              
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                ",", #7}], "}"}], ",", 
            RowBox[{"LegendMarkerSize", "\[Rule]", "6"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Times New Roman\""}]}], 
                "}"}]}], ",", 
            RowBox[{"LegendLabel", "\[Rule]", 
              RowBox[{"Placed", "[", 
                RowBox[{"\"\:51fa\:5c04\:7a97\:53e3\"", ",", 
                  RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "]"}]& )],
      HoldForm], Scaled[{0.85, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     InsetBox[
      BoxData[
       FormBox[
        StyleBox[
        "\"\:9053\:5740\"", FontFamily -> "\:9ed1\:4f53", FontSize -> 10.5, 
         StripOnInput -> False], TraditionalForm]], 
      Scaled[{1.075, 0}]], 
     InsetBox[
      BoxData[
       FormBox[
        StyleBox[
        "\"\:8ba1\:6570\"", FontFamily -> "\:9ed1\:4f53", FontSize -> 10.5, 
         StripOnInput -> False], TraditionalForm]], 
      Scaled[{0, 1.08}]]},
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->Automatic,
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{50, 40}, {25, 30}},
   ImageSize->Medium,
   LabelStyle->{FontFamily -> "Times"},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 512.}, {0, 3500}},
   PlotRangeClipping->False,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxd2EvsHlUZx/EjK2IImRhjMGnMQBpCjDEvXrmoHO+IWEe8oUIZQSqCwtCW
UqDgCTRaTTUTvEFFPNYqXZlZsujixLB0MYsuuuhilv/lu2DBgoWQ8/29yfz+
iz759DnPucy8czlz7f2P3fXgFSGE97zzz7vxzMvv/H1wE8O7f+X5GsP2tnUM
/P+VFj9PbGrc+w1+f42n/4avqXH8B95X48l/4rbGy/J1NV48h/fX+Mq/8PU1
Hvw3vqHGq17DH67x9/JHajyj+o/WuF/1rP+sxruxxmPyxxhf8/t4jZfO4k/U
+Kr8yRrfK3+qxnu0/k/XeFG+qcYPyTfXuJFvqfFExrfWeEj+TI13yJ+t8dzf
8edqvF2+rcarXsWxxn044ddfIc95vhMnfEL5L7A+5fH5M+S/WOPRv5LHF3D4
Ev3TPuFTqv9yjX9UPd7/MvmvsD7V49Mvkf9qjXs44YvK317jpDw+pfzXanz7
L+TxcRzuWI+X8D7lv17jrHr8pvJ31nhe9fik8t8g/2fyeL/md6DGN9T/gfV8
wzeZr/rHF3X8uvX8I4463t26fcE36Px8q8ae8x/xTVz/CZ8jX/D/9Pu5q8YL
/P4ifh+/54SfwwVfrevj2zVOOOKXcMIN12/Be2ep/06N/8URn8QJX6F6fEr3
g+/WeBhHvIcT/oDq8dWq/16N/9H4+LLGxwdYT8Ev6nr/fo1vc31HrOs94cuc
j4Lf1Pm7u8ZLOOIL+r3gy3+iHr/1B+p/sHbEl16kHp8bqcft76j/YY2vn6Ye
7/2Wejz/mnq1/xX1P6rxShzx3S9Qj996nnp8nny4h/ES9fganPD8LPV4wuHe
GvMz1OP0NBEPT1GPy3HqD9bYkI84PEk9Tkepw8sTtLuP+eGI+8PU4UH1yuPQ
U3ekxhYnHHF+nDo8DbTDI854gwteHibi8Cjxx/TzC8bHkfqIM+7x8jPq5J/T
DpdHiKrHi/K0D/fTL/Np5YcYH0fm1+OFfMIJZ9X/hHGUf5A6XH7K+A9Qh1sc
cZSp7+VD9Itb8ln9afwH1utc8EI+KPK7aLGOe1T+oK2L6yhhHfds9UX1Ok/K
Ux+Yt64TrUP3mWjusa5bHVfdt7Ly9F8sv6g/7kPh0DrfYl3nOs66L/dY9/2k
9vSXZZ4zReeJ9os5cJ51n29l6vU70HOyV17jyzyX9Dvaja/fEfWL+uM9IDy0
7r81R5n3El0Xeo/Q717vPVmmfTHvrhveU4KuY94rWqz3jIj1HtWrPe9pSea9
Mlu+yLy3LebAfUnvZS3We3GUNb5MfZJ5r84y8ynqX+tXnvkF7kt6j20fWc8/
yrz39mrPeEnW+mX2GboP6r18UZ7+gu6D7BNamX1JtHwvs89I1j7LHL/dfZZ9
ke7T2kcE7qvax7Qy+yzdd3fjm/Xc0L4py+ybisx8F5l9m55D2ve0ei5p/EfX
7fWc0L4uyawvm4t5sf7DY0T2qa3MPjTK7EN7c5LZ92Zzkdn3LjZeGNbzaWTq
W5l9t57rOh56Tmu+ndX3lh9kxk/WfrR8tvEnc5H5jjDLWq/ltzLfDcLj6/4a
me8OrXxdjRuZ/qLMeJ21782D9Z9s/NHaZxtvsnyROX6zzPoWq9+aw+G1G5n+
W5n+NjLzjzLfhTqZ70J6D9V3oMGcrP9R5rtTlvmuNNn4xeY/y3xnWqx+a/MN
R9bzaY6s863MfDYy/UVr31m+lzkeg8z3tWT5UWb+2fqfzMXqZ1vPsps/w9p6
wtF1+0Zm/q3MeBuZ+mjurH63z9D6Za3f+h93/dW/bPnJ6ouNP1v7xeaztfbh
iXW+kXX+ZcbbyFq/zPo6a99bf4Plk/U3mvPO9W+yfLH+ZvNi3prDsXX/zc41
tsfW7TfWPpo7a99bfrB8Mo82frb8ZC7W/2xezFur1z5bf83ONbZPrttvrH20
fGfurf1g+WT50cbP5snqi9XP5sW8NYfjazfmVtb6LR/NnbXvLT9YPll+NGfz
ZC7W32z5xby19uEp5WvUdxjlW/Nm154qc2furX6wfDKP1j5bfrJ8Mc/WfrH8
1vLh6XW+MbfmjcxftHxn+d48mJN5NGfzZC7m2byYt+bwzNqNuZW1fstHc2fu
rX4wJ2s/mrN5MhfzbP0vlt9aPpxY5xtza96Yo7kz97LWb/lkHs3ZPJmLeTYv
5q05PLt2Y25lnX/LR3Nn7XvLD+Zk7UfLZ/NkLubZvJi35vDc2o25NW/M0dzJ
Wr95sPbJPJqzeTIX82xezFubT/jlOt+YW/NGpj6aO2vfmwdzMo/mbJ7MxTyb
F/PW5huS8vH/Xnefow==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxd2E/MH0Udx/HBENMDhz300EMPK2lIQwxZoGpVlBELCtS6ImpVxBELFqzw
AwpUKbhiYxqDumLVR62yImIPHjbYQw/ETIwHDj3ssQcPe2iMMRz2wMkQo828
P0+yn+fQb179fmdm//1mdvY9Dzx2z4PvCiFc9f9/rsSbr/z95aYYrvzlF0oM
y60l7sCBuDOu//+DxKrEf/1gXXf5N3hXiS8NeHeJ9/8e1yWefwVfW+KxP+A9
HN+r+LoSb/kj3lviJF9f4j9V/94Sb1L+hhLvkJsS31L9jSVeL3N9juh4bi7x
bzrefSUm+X0l/kfn9/4Sz8kfKLGT95e4V+a6ntf1+lCJZ+QPM558S4mXX8Yf
KfFq+aMl5t/hWzme3+JY4ltnOS78Dxw+VuIF5XGv+3tbie/8mjy+hMPHSzyq
PD6j/IESr1EeN78if3uJ+3GHT26Rv6PEs7jDp35B/hMlnsMdPvBL8p8s8fTP
yeNTONzJ8SqPdyt/V4npDHl8Lw53l/j3n5HHp3A4WOKLL5HHe9T+UyW+oTw+
i8OhEq9WHu9T/tMlXv4peTzg0JbYUB/xpZ76dt1/xsfJh88wHv1FfFHt8RbO
+G21v2ddH/GFn9Aeb/2Y9vio2n+2xNPUR7yl9vgEzrj9Ee3vLfGwxsc71B5X
Gh+fIx8+V+JEPuJB7fFetce71P7zJS4cT8Sj2uNB7S0fvsD4On+8R9cfn9P1
x0nX73CJuj8RLxof/1nt8Sm1/2KJB3X/caXnDV+DM9bzFr5Uop6viN9Uexz5
vWR8Sb+fL5d4nN9LxBf1e8Q1v9eMt+eH+0rcyXwQ8VnNF3gkn/ERzU9fKXE3
82HEmh87fB/zbcanNf/eX+I7zM8Rn2B+7/DrOCv/Cu2/yvHjiDPucMf6lfEb
Ws9Sie9mPazxIRxxjxO++Br94p14wH/FGb+JZ3zgT4z/tRL34RofpD7iJ3DC
hzQ+PszxDfi/rN8ZX+B8Z/xvnf8DJd6Fa/w663HEel9JeB/ra4ff5v4N+Dzr
Zcavsr7N+KTWn69Tx/NW42N6nnHL856w5qsOa/4b8P4X6Rdv/ZDxcaP3tSMl
Lt9nfHz6BcbHO77H+Lh6jvFx/Tzjq79nGR8PTzM+zs8w/oMlTuRr+QnGxy1O
8pOMj3s84PQ44+DuMcbH4VvEh6h7lPHx/E3GV/4o/eL6EfpVnn4HHL/B/yuP
54fW/QT9v64j1nVRP3ruEtZz0WHd90F5XWes52rWcTEPBM5L82yNNa9F5Zl3
EtbvqMOalwfrT9dN8/qs/lkHwsPU4frhdfuoPOtOUp51sFNe42OtoxlrnZxl
1uHAfdS6qvuq96Aos+4nmfeITu2pHx5Z959l8rOeG97TAs+Z3vtqPXcaX3ne
OxPWe11n+UHmPTfLtzG+zHtyOEakfS1zfPHYuj7JvId2qic/yLynZ9XzXj/b
ePod6r271u+S9+gok0+q53w65dlXDDL7oKx69jWz8uxjAr977bvqR9f1UXn2
WUnWPk719DdYveYV7RNnqw/MS9oH1jLHE2XGS1aveU37zkFmn5qtfpbZB4YN
kX1mJet6yOyjG5l9aJTZl7cy++wksw/eyLp+MsffW/tB5nqOls/W/2T9zVa/
yHxXCKwT2vdXMt8RapnvDI3M9YhW38p819A6pO8iG5nvCp3M8fUyxzfIXN/R
nG28Sb62xNn6W8yBdVXfaSqZ/mqZ8RrLR5nxtE7rO1Gy/MbadzLfhXrzIHN9
R5nrmc2TeTYvMt+tAu8N2+dvrs2NTH9R5vz0XqLjTzLXYyMzfmf96T1G390G
82jjZfNk/c82/rLdH3/Hsc5f5vmoZb4LNrLuv+VbmeNNMsezkTnfztr3su6/
9Tda+2z9T5afrf1i9eEpItenempdX8s6/+08VVbfmpN5I+v8rf/ePNh4ozlb
/STr/lt+kbnf4el1vjLX5kbWWVm+NSdZ99/ynfXXmwfzaO3zdr7EyfKztV/M
4Zm1K3O97RIbmf6jubX6ZP1tzJ25t/4G82j12fKTebb6xRxOrOurE+t8bfnG
HK2+NSfzxtxtu8Te8oONN1o+myfzbF7M4dtrV7Kef8s35mj1reWT5TeW78y9
1Q/m0eqzeTLP5sX6C99Z5ytzbW7M0dyak3lj7mTNf5YfzKM5myfzbF7M4dm1
K3Mt6/m3fDS35mTeWH+d5XvzYB7N2TyZZ/Ni44eT63xlrmWdv+WjuTUn88b6
6yzfmwfzaM7myTybF3N4bu3KXJsbczS35mTemDtzbx7MoznLmv8tP5sXc3h+
3b4y67ue/hpzNLfWPll+Y+7MvbUfLD+as3kyz9bfYvnw3bUrc21uZK1/lm/N
ybyx9p3le/NgHs3ZPJln82IOHd4V/weYjqnm
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.945109, 0.593901, 0.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxd2U+sHlUdxvEjYdFFF++iMdfExUgIaUhDRq1a/3KsFStWHWrFC1YcEeSq
VUYtUrHosfFPVdRRK14QdcRqupwYQm4IMWdhTJezIKYLFrMgpgtj3gXLxlhy
vs9N5rkLfvnwnD9z7vvemTOnb7r/4eMP3hBCeN31/7xWn37q+s8b3hbDaz/5
XKlhfXup+3CgvpG6h/oe6qrUre/FRb+dC3ij1NVTy3HOPo2rUm98Bt9U6t4/
4JtLvW3At5T6zz/h/aXeIt9a6kvyAfNtpW7Kdan/1fhvLnVbfkupL8hvLfVW
+WCpR/6I+X2+9Hv89lKvaD3vKPWa8kOlPiG/s9RJv493lfqK/O5Sk8zn8OLv
8HtLreT3lfqyft+3l7qlPDIeecIn1P79pW4rx//R53m41GeU426b/AOl1jjh
K0+SHyn18m/JcVL+wVIPKMcP/Ib8jlL/gdMd1v9Dpa6U4zP6fh4t9SJOOP+a
/MOl7lWOj/yK/M5S9+OETyv/SKmHlONe+bFSDyrHx35J/tFSd3pyvKH8Y6W+
qhxfwOHjpZ5Sjrd/Qd6UeuXnpUa8Q57wFv0zrtT/LtbzM/rftRwv4Q2c8SHa
h+OlbjJexPEJ+uOG9hnnn9L/E6WexxFv/YT+lme8Qx5OlDrhiI/SPuHwY/pb
+/DJUgfyiHuc5PP0x+sf0v/uUvdoftzp+nGr/vjoj+j/qVK3ySMecML7aZ/x
yPWFzVI3uZ6It9Qf9+QZn9f895D/gP74Eu0TDup/z3K+cG+pta4fD4yX7l2u
N+NEHj5daqPrx1c1P641Pz6v/idpr+s/uVxPwjs446z1fwarP07fp+INzY97
8nBfqVu6/vuW15uUa/140vyfLXVQfxzJE640v3L9/ttSO9pX7bJ9NLd49/uB
L9N/wIf0fcUD+Yz1fQyfK/UK41d4Q39PODBei/fo7wsfJR/wWvOrP3/Ps9rr
7/d+5iWv8CXdT3DN/afFl3V/wpl8wLp/Zdxwf5vxft2fP1/qzbjCV3HE+7jf
t/g5nHDL82PAGWc84Rlf0PPzAebHFd7L8zriLZ6nLY56nuNL7AcGfJL9QJbZ
b8x40P7lwVL3sH+q8DaO+AT7rRYfYP+W8OFnGRffiDO+hmf8Cg5fKPXqn5kf
/x1H/LeLzI+f/Avz4w4POOKMz+EZ3/lX5n+o1NfjCv8LR/w8bvFpnPANeMA7
mh//T/Pjf7OesFXqNa0fX9T68fPPMj9+DCd8nM9jwHfzeWX8KvvfGZ/SfveL
pe7j+1HhS3x/In6O/V+LD/J9TPgY+7UBX9b3H2f+nma8rf3HlxiX+0GFRz2P
sO6vLd7U80Htz9EO14l5cTzL/Dg9zvxf5v8/yvy4OUM/nB9hfjx+nXFweJj5
8YCz/FXmwfEr9Du1XFeF9b2JWH+HrdqTJ6z7zqD2ug9h3ddmrPtm4Dr03Kuw
ngO718m+pbX2Sea5PmA99zPWvmFWzj4q8HvRvqjC2kdFrH1Qq5z+Sbn2gcq1
T8Xap87KsT437UMrrH1zVK59oHL2+Uk5+/rB8izz3jTLvEeEjsp7ywrrPaqS
Ga9We95jonLe6xrlvCe2Mu9dnUz7JPMe3Gs8+g/mUe15T8wy65vU/nCps7Vf
y7xHh68tx19hvTdXMtdXy7zXR5n37sbyVua9upN5D08y7/G9zDnCYPOP1j5b
PsmcW8wy5xprmXOGwH1E5yYrmXOOSqZ/LXOOEWXOaRqZc5bW8k7mHCfJnMP0
Nv9g/UcbP8uc80wy50Kzjb82h29QOYdayYxXyZxb1dY+ylq/5a3MOVkncy6W
bPxe5hxtkG8qdbT5suWT9Z9lrd/ycJrKOd/q9DKvZK1f1votb8ytzHo7659s
vl7m9zXY9Y2WZ/NknmXOLdeWh0eWXsmcg1aW1zLXEy1vLG/Nncx6k6zP39oP
Nv64m5efbPlknmWt39YXvrnMVzL9K8trWeuXWU+zm5ef1sbrLE8y19ObB/No
/bPlk13vbPnaHB5deiWzvmrX5ae29lFmvsb6t9a/Mydzbx5svtGczZN5tvHW
5nBm2X4la/1nlu1rax/NjfVvLe9svGR5b/lgHs3Z+k/m2by2/uFbS6/M1a5L
rS2P5sbcmjtzkrV+ywfzaM7WfzLP5rWsf8d5bDneylyZa1mfv7mx9q25Mydz
bx7MozmbJ/NsXpvDt5demSuZ9dWWR3Njbs2dOZl782Aezdk8mWfz2hzOyqWu
ZD3/zi7b1+Zobqx/a3lnTubePJhHczZPNv9s+doc9B6u+9/jy7wy1+Zobsyt
ubP5krm39oN5tPbZ8sk8m9fm8J2lV+bKXJujuTG35s6czL15MI/mbJ7Ms3lt
Dt9demWuzLU5mhtza+7MydzL2v9YPpqzebL+s+Vrc+Cc6vrz4P/GJr4V
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.645957, 0.253192, 0.685109], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxd2D+MHGcZx/EXqi0QmiLFFSkGy4pOyEJDEuAAQ4YQwvF/CQEMXGBibDBw
kIUY2ISQvJgABxgYwMABQQwmxRUppkIpIvQWKa6c0kIUUyDkwsUUKa5AiIT3
+1tpflf40cfP+z7Pu7O7s++8rzv/yAMXXx1CeNXL/7wS7/r/31vq8MpfupJj
mO7J8TYciAVxQbx7/v/NY/Vs3vbP8FaOp3+Fb8/xhV/jEl/Dp3K87Xf4dI7l
7/EdOe79AW8T/0h8Pf3+hM/kePQMfkOOZ+Qqxyc0/405Hqj+ncxX/q4c97Ue
rsPxIX5Tjv/U+t+c4zPKc72vKr+T467qvTXHW8q/LcdKfnuOL8hnc2x+i9+R
47b8zhxPdH3vybH8Da5ZH+Mj/o/GvyvHM4yP+EXNvzfHy4yPeK35787xgvL4
qvL3UV95XCr/nhyv8XmJ+LTy91NPefy0Pm/vzfEsjnhPn7/dHOtfksf7OLyP
qPn4UPn357jVksf1L8h/IMe18nhU/oM5Tsrjg5+T/xCvR3l8Hw4fzvEm37eI
+6vkP5LjEY74WPWXOS7I1/jSTxiPt6if8KD6H83xRPPxlubjNU748KfMf4D1
4xovfsx8nHDC4wHzP0Y/8jVuNR831E94ofkPUu9HzMfb5CM+Rz7hgMPHczz6
IfPxLvmIhx8wHwf1/0SOBa7xRL2IK/XHC/Lhk/P6tTnilvEJ1+TDuRxvfJ//
x4Xm40rrx8eMD5/K8UTz8SUccXia+Xit+Z/O8egK8/GO5uOEk40Pn8mx0Xx8
8j3m4wP1x7vqv5fjFJm/N68X8TH1El5o/kPUU3/cqv9D8/UkmX7hs4xXf9zj
iBvNxyX9wudyPEe+xluaj4PmK49Dw/oZX+Id1cPjU6wDr/X68Ir5XTNfT9J8
POJO/R+er6fES10PfIN8gyu9Ptyxvu7h+XoTbhg/Yr3f4fzcJd5Wf3yAG6z3
K+L0JP1l9cdB/XGh1/95xun140vqj3W9G6zrEfFNXX98jBMe1B9Hvf4LOer9
LnF7hf74hl4/1ucxXpj36zRf/XGp9x/r+xIu5nik/rhQ/4vz9TV48/3EW7jD
QfcLzSc/4uf1/f0C6+H+UOJD3c/wiBtzxB3usO6PCS+oP6qf7t9fzHHN/bXE
J/o9wQNusH4/oubze9fhWr+XuOX3d7R8uJTjDr+PJS70e45b9gsNfp7xEW+z
n+nwZfYnCd8gP+IT7Z++lOMxLvGC/VmN99l/NfhZ7ffwLfaDHb6d/WlSPfbL
I97sn79MPfbnJb7F/r/GJfv/Bp/l+SHiF8l3+PSf6Y9f4nlkxOuO/l/JccAl
/geu8dZf6I//jqPGX6c//i/5hO94lv747F/pv884XOKbuMb3M7/Bz+GIX2J8
tz+vn/A19ccLHL6a47/VH/9N/fG/cIPvxBFP1+mPr+OEn+N6jPi1OHwtR13v
Er9G1x8f8f41+ByOuOLz0OEH+fwkfFOfP7yr57NHqM/ntcR36/OP9/T5x52e
B/BK3z9ca7+Otd8d8Y7uPyvmc38q8PEV1oMPuZ9XeMnvW43DE/w/HtesF/ec
D6w0/jLrX81jqzyxUz3et17juY8krPvWoPHniVj34Un1+R0KX2c++5IC63e9
VF77Dqx9Xy0zfymzT29k9o0r1ec5IGLtq1us54BOeZ5benMyDzLPaaP64Unm
OSp8A/NcWMg8p5ZYz+GVzHN2LfPcuZSZ36gez8Ur5XGU782x1XjOATrlcW/r
STZ/kDmnGFWPc43JxodHiZzDFDLjS5lzmUrmHKZ+dF5/aeMbmXOZlcy5TrR6
rcw5VCdzztPLnGMlGz/InFuNMudok8y5l76HGl/InKuVMudaleVrmfpLmfqN
zLncSubcL8qc07VWr5NP5djb+GQeZM4JR+s3yZxLhm/O84Wsc0eZepXMOWkt
c+65lDnnbGTOTVfmKLOeVj6VY2fubT3J6g22nlHmHHeyfPgWkXPcwlzKXJ9K
VlXLLzf5HBtZr1+mf5S5nq3M9eusXm/1knmw9Y9WfzKHb89dyPQrZepVlq9l
vf9Wr5H1+q1eNLeb+vmvs3q9Odn4wfqNtt7Jxof13MXGOZYy/SpzbV7K9G+s
/srGR3Nr4ztbT29O5sE82nomqx8em7uQWU9p+crytUz9peUb88ocza316zbO
sbd8Mg/m0TyZw+Pz/sXj83y5cY6V5Wvz0tyYV+Zobm09neV7czIPNn+0/GQO
35m7kPX+mysbX1t+afnG8ivLx41zbC3fmXtzMg/m0TyZtW/XX2EuzZW5Ni/N
jazXb/lobs2dubd6yfKDebTxk+XDd+cuzKW5Mtey3n/LN+aVOdr81vKduTcn
82Aerf5kDk/Oxxfm0lyZa/PS3JhX5mhuzZ25NyfzYB7N08bEp+b5wlyaK3Nt
Xpob88ocza2s+5/le3MyD+bRPJl1Lv3yK/kfHircJg==
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.285821, 0.56, 0.450773], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxd2TmM3kQYxvEBUWxB4SLFFhQmitAKIWTuBQIZ7uU24VpuE3IsEIgJRwKE
MIQbAph7gWaKLVK63ILCZQqQXFCkoHBBkdIFRYoUEM3/seT3K/Lqt+9c/uzP
c+TiXQd27jnfOXfe//+ci3/+ce5zvXfnPt2xFN24I8UF7IgX+fnftxGzFKtX
8ZYUl9XeYoqnPpm3Ez7DeYr113gr9b+Z93PkW3xJiovf4aUU93+PL03xD/ky
k788xbOqX6S4Jl+R4j/q78oUdyt/FeNv8NUp/qvy16R4WvlrU1xQ/roUV+Tl
FE+pPPdjVdd/A3n5xhS3qfz2FHPlbzLjuznFpa/wjhQ72dP+l9TDXvlbGO9x
8rhV/lbqK49L2nO3pTh+QR5vYnc7f1d9vIrdHSnWn5PHq6p/J39XHjd6vu5K
MeKAN5VfSXFReXxGz+vdtIcDXlf+nhSXPyWPV7G7N8WTyuNa9e9LMf+YPK6U
v5/6yhu7B1I8oTyOH5J/MMW1j8jjAbsyxYz6HjfUD3gBd7hT/Ycof4z6eFHj
wWc+oB4+TXm3k+tVfVyrf5Pv8BLtuYdTzFUfL+GAC/WPo+o/kuIa9ng9UB83
qo8H8u7RFD/DHi+oPh5VHw/vU/8xxqv6+LDq4+w96uNl9f94ijl5jyPtB1yr
Pi7V/yrjwx471cfxCPVx9S7lnuDvR6mPHf0FXKu+sXty3p7H7TvUx5F8h736
fyrFnvIel29THxfqHwfKu6epr/6xU/+4Okx9WfWfoR55L9NeMPkOZ4zPPWvG
jwPlg/KHqI/bt6j/HPVozz83H2/Ahfo3dhX1aC/HQe3hlvIVLikf8Ej5iLs3
ibhi/IPKa/zPc31v0D8uqO9xoHyFO/WPI+UjLvV9YU/7A86x25Vio/5xwB5n
tF/hmnzAOeOJsq4fj3jAA3Yv4Neph/X9eqzvp8Ij5QOOOOKK8h3W/R1wq+vf
zfWof6zvy+NwkHZlXT8uccQd7XVY93PAw2v0v2deP8cN9f2e+fgq7Ggv4F7X
jzNdv8z4B1xhtzfFVtePvfrfO7/eau+8/YCjrh+PtN9hPS8DLmnf7ZuPP8e5
+se63xV2uv9Y32fcNx9ft8/0b8q7tfl4cjx9/7KuH+t+Bjw9f3h6/nCv7x9P
z9+L1NP9x9P3L+v3h/V9Baz7E7Gelw43ev5UXr+/l+hX7z9Z7x9c6Ppxo/eP
zPsxYr2fOjx9/ybvXsa8r3Ks96XHAVdY7/+ANb9E5fX+w5pvBrWn+Ws/Jp/j
Xu9/POj9j0faD7ikvShrvsY58++AG9YH7hX+jnPcaD2CS/IVntYXWOutiBdx
h0c8mLxj33oS57g/Rv94jbz2uadZzwVcsF6NOGi9jJfxgKf18wH6Zb2c4xX2
Cx6P7E8qXGm/gpfYD0W8yX6oU5792ICn/VWd4gL7uQzn7MdzfJr9ZYHPYI9P
sN8s8d/sbyu8wf65xsd/YPzqn3yD/yEf1R/79xbXP3J9eBP3uPmJ68Xbf05x
VH/kHe/B9fUUMzziXO/JX1Is8GHs9d7FJc5+S7HC/lfGjbfggM/iBve0F3FB
ey0+RfkO/457vEF5vedX8Yhr7A7O+9c8eSHO8Rlc4AXqe7xCvsQN49c8q++z
xn9xP7SuOMH9aPAG9zNqnsYtXuf56PAWng/NMxeQH/DVPF+alzd0PsI8scTz
nmne4fnWPHyK31eBB35/mqda9uuaRzN+3xUusOal8liKQfMm7xfNu9rfaV4t
eL9qnVJrPa/2mA80L2pcWlfqvk7rRj3XmpeYF7Vu0DyRm3WE5kGty6Z1IvuK
aR24K0WtA7QP0TyofZLmbe2LtM6Y9rHKc26gdYP26Z3WEZxLaJ2sc4tB5txk
VHnOQbSO1DmP1vk659I6QOdGWvfo3E3rkuncS3nOoSrldY6lPOdswfSndYrO
AbWv0bleK3OOqH2Wzgl7mXPMaZ/BOaP2ITq3dFqHcM6ZyZyjal2kc9PClNe+
Queweg51TlrJnLPWMuey2tfpnFfrKp2jRlN+2vdyDjytozh37k17g7mead+5
lXhoPv5Mpn5+aF6+kDnH9jLn3KWx1nHTObfMOXsw5RvTf5Q5Z2+NO1Nf5wQ6
tx9MfpzyfA7Py2cy7ecmX5i8N/nSWOcQ6l/vLf0/QjB5raN1P6Mp35r2O+Pe
eDAeZf0/x9vzfGacT06fwtgb69xJ461k+qtN+WDKNyYfjVtTvjPt92b8g6k/
mvI659InM86NNQ+pf2/ypfF0TqbrN/lpH8Lz1Jjy0ZRvjTsznt7kB+PR2L07
dybTf27yhbE3Lk39yuRr4zA5xcbko3Fr3Bn3pv/B5Edjd2TuTNb1m3xh7I3L
ySlWJl8bB1O+Mflo3Bp3xr0Z/2A8mvLaR+qTGefGhbE3Lo0r49o4GDfG0bg1
7ox748F4lPX7Pzp3dnRePjcujL1xOTnFyuRrkw8m3xhH49aMtzP53ngwHk19
/T/HdP3vz8vnJl+YvDcujSvj2jgYN6a/aPKtyXcm35v8YPKjsdM5yLjjP6MY
+VQ=
           "]]}, {
          Hue[0.8503398874989481, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.7, 0.336, 0.], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxdmTmzHUcVgBuiF05AoIBgcFHUK4qiBswiVje7DAYGY2MZsBmekRBg7DG2
sbC8DGITW9UNHU6o8IaEHSqAqhsqnFDh/ATs6u+bqjk3eKe+d5Y+09t0n/nQ
xYuPX3t/Sul97/55T/7vv+/+HvtiTu/9yu0q0/rIXib+fxbkJWSDfAb5gSr7
3+/tyi34g1XemeC2ymz7D1V5+U/wh6uc/wJ/BPs78Dn8D/ijyL8jP1blqP7j
5CN3Vf5H/kSV53+DP1nl0XgPV/mO7X+qygd/hT9d5X35M1Xekz9b5RWf53KV
d+TPVbn8Gf48+ctfIH/7h/G7exv+UpWr+i/zfOofCfFzlTP2E9xo/5UqW3iC
r6r/apWnP6KH7zu+X6vyzPjwov/Xq+z0hxc4faPKB8Sb4Kz+m1XeVA8f3kL/
rSrLm+jhq+Z3pcpz/eHyBvpHyU89nN9G/230tDfBq/P9O1U2xJvg/nX0j1U5
/gE9nOD03SpP2E9wuon8XpUHeIJn438/6OFGfc//X+O54IH1O8Et+RR4fQX/
HxBPf3jRH+7gArfYp8d5PuJlOL2Kv3q4wMX95YfER5/hUX+4J36Bj+b/BHa2
D7e/4/9P7OMVeIDTk9jZ/pP755ng+WX84cH2fwTTXoZX24fnl/DXXv+nqtye
H060Nz21f74Ct+jT1SobOMNH/a/u8ytw+wL+Twf/p/f2E9zZPtzb/o/3z5fh
Fp7g0f6DF/TpJ8Efbkf81cMFPsDpp9i/iD9cfos/fLT/4az/M3v7DC/6wy1c
4In20rNVDvrD9u8Ez3CRf4P/z/b2Gc76w+V5JDzBaSDfXxMHnuAsk98AZ/ST
jH7WnvwK3N6gHXiw/Z8j4RZuf0VceCHeAM/oJ3ggnxkutFf0J78FzvinC/zh
Fl5sP+gHONn+xT7fGS7XkfCEfjH+L4jz3F7fwssvaR+2/wbZ/n9un8+sP1xk
8lngQvxEHsX24YH2soz9YN7wBC/XaB/O6EuIvwT/hN9Afu21vX+Gi3ZK4kyw
/TCbx/XgZz9ob/vX99zK2Gc55Glek/16sW/XcXMeuC6W4J9Cv7ahX+yHzQ5p
P5q3827Wzn4L/ei8ch4kxnkO88xxy7LPH+ynG/t8Z9nnd907TwI7b7d5Hth1
6ni4Dpewbhwn9wXzcd6lsC6cJ8l9Lqwr54X7nO25z2zzCHZ+zbDrvqi3/0O8
xL629T9s/2TYfWaAt3ka/H0vuO8VeBt/44d913xb2H00w9s++/ze3/fIti+r
J57vHcdxke1/92V4e0/6/LD7ou/JbfzVuw5k9x3fw+Tje8B1knhPOh+2967r
xveq7Qf95DnI9mXnH7zN/xf2+SbOAe4TnkPcb7LnBPd/eBt/zy22r7/Pr73j
r73rlHOM676R3Q9h11cHb+9Hz1XY9/r7vpSZ96P2tDd5TsPec9k2r2H3vWPI
t5gPfPJc5jrTn3irzDxIniOZlw3sOvAc6rzsZPtRZlx72HEYjI//+NLeb0La
rwf1+HuutV88hzoPi+dS9KcQz3Oy47Qaj/N5Qnpeb7yH+Fwy5/cO9vye4QPc
w/Mr+7je50btvZ/Jr+3z6uEZPsJHeLuPmh98gjvu34vtc9/1XrV4//Vewf3c
e8wV7vvek0bqBx08c//P8CXqEfZLgQf4dJs48E14Cvb24w3qJXNg72Un6kUF
PqO+dDIf6lcLfI5+tX3rW4zTXepZDWx9q4WPsPe4Hn/nxQPYe/ZKvcx76hn1
tRE+/2eV3kuvwAfvzbDz6C7svX0hXoHvoffebb1vcR7+i7xCe87LO+gbuP03
Er6PvffsBvvsvIZ7eMDeOsEMW0e4T37WDRL+rovL6Gd4e374Hv1btPf54Xcc
f5/H8YfPrGdSR1nQN3CDfwtbr7SOY702W+dBb913RL/VkVhPI9yxfib4EvoD
PLB+Z5n1d9QfvXWggfrWCXb/sA7luK7m576Mne8F61jbexH2HNep91wF+z7e
9q0L8pJ5/46y5yfrZtQF3Ae9p8/qqdu4D1rXKeZj3Um2DidTd1wDb3VE6paN
dULqtK166qadTN05y9SNe5m6tuNiXXlUT918Cmyd0rr9LFOnP8rU0YtM3fwk
851gCfFW+SGkdVa+SzQy3x18z2jfyXwHycG/l/kOMgR767x+95gCH2S+m8wh
/jHoS8jvFOwXme84q+x3m9f3vNWFsW9l8u8C58B9iDcE/SjzfWna2qu/Q/Cf
Qz7HwCXEOwVeQvw16NOtPTe39vZt0HeBc7DvN65yCPox+E+BD4Hn4H8MXIL9
KeiXoF+DPr2x1/udwl8b9F3Q542r7IN+CDwGnkL8Q9DPQX8M+hL4FHgJvIZ8
05t7fRO4DdwFzoH7wEPgMfAU+BB4DnzcuMoS9CfZ+R/0a+D01p6bwG3gLnAO
3AceAo+Bp8CHwHPgY+AiO/+Dfgm8Bk5v77kJ3AbuAufAfeAh8Bh4kp3/QT8H
Pgb7EvSnoF+Cfg2c/A6a8v8BMb8EEA==
           "]]}, {
          Hue[0.08640786499873876, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], 
           RGBColor[0.491486, 0.345109, 0.8], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          Point[CompressedData["
1:eJxdmTlsXNcVhq8DBAhcDYwISJEAL4EdBAPHGMdWNjvm8xLZkmVntFArJT5S
4k6RjxzuWniTAClcTaP+NWkmzQCB6rza1TTsX5NG1TSqE5L3+ymcw0IXv/6z
n/vuNj+fXb8694MQwhvH/5yMH5z8/fuTPJz81X9LYxhPTJ7+vZpIOOQW/8jh
Fnr3GH+c/2tw/NdeB/8k4cEm+Kf5KfyuB84S/n4P/Itk/9w++O38jZOheAb+
ZeKPIvhX8H8HtxP/zj/A7yb8T/HvpXgOhDv5jdN0hN9P8q9Uj98w/pXxA+f/
wxT/S8V3Po1R/G/xL/y75P+7Q/Dvk/8j4T9Qr6fgP1If8R/h7wn4Y+ot+T8l
fOkA/Emy/0L8BPmKz1N8z8ExT2O+C/9p4l+I/zTZf6n+fGb7Fz9L9s+pn5+T
j/jPGXfgv0hjg7/4BfNL/v+cxmwbXlj6F6gH8yleoD+aX1+Szxb8lym+bXD4
Cl76X9EP8RfJn/kbLzr+EvFuwF9K/HPN96+xX8J/7b6Hy8wH6V9O+bwJDt/w
/2uM3/B9gMO3aaxl/1v4R/B/wT84gusV+C78MmM3/9/J3yF87BLvKnrIR9m/
gj/k8yuMivdK0l9eQh8+LqJ/FbyAHriGj1fT9x2lf5V+S/+atZ9fQw578Zq1
X19jfoDDdfLDXn6dfso/fHse/evJ/2AO/Ul46U/Sf/mHH0h/EvvgcCPZWwbn
N8gH+1FY8d9g/kn/JvV/iP7N1L//PED/prVf32RU/LfQRz6/xSj9W8nfJPZr
+HoW/dusH/J/m3ilfzv5b4Nrh8Md1hPs5Xf4f+nfIT74Gvm2/N/l/2fQv0v9
C/TvUn/p36X/8GGKfoLzKfxJf8r5nyJe/J3te6rfPXjp38Mf8vU9m2+4T72U
/33+fxp9+Db26vv0Y/pMLs0n9PJpm0+ctvL1tI0vFGd2TodMevQhF4/9oiCf
KeRe1+l0rArqTV1qYew10lefZ4iXPmYzyCsf1Zn4ihnyRT+KB1czNh7NC82T
Zsb5n6U+xJvN4h/9fNbaK2ZtvFHyfBeV5F9/JylecOP8Hc+bFM9t/D+w8sff
Yfreb+D/9XeRxgc2n+oB6yX2avQnwY3sYT88tPFmD8lvEv/ir+P/oY0vimed
rYTRr7HXhm+EWYfCnK1fNpfiD/Lv+EJY6/qcrU81Rz3kX+uc/GtdhQ9aR9kX
s3lrL5+3+sU8+aMf520+1bytRz1v69mgfwQfFrAHzoTlfwF99s1iwcZ3vK+Z
elXoHyF/vA+metG/ZsHWLywiz76evd5Xk/9F/MMXi9ZeBLfhK+2byn/R9qNx
9sMS+tjLHM7Z19WvAn5Av+KSzadawp/OEUu23o3swwfOPZF6ZQ4fn4tMPQuH
47K1V4EH8r9s69NgX/MtrPB9av6t2H7kK3a+FTq3yb94zoHVCv4v43/F9q9x
576wanG2auPP4aP6v4o/+V+18VfS51xdg9vIN5LnXBx0jpT/R7ZeZ+dW1d/x
x+fQFI/m3yObb+34xvkL7hydrSGv/B0u1mx94pqdD9Wa879m52sjjL+wbvuV
cW/W95PrHq36r7v5v27nS7Xu/K+7+bdu+xdK+721SluvrKRf3EM63DN0bj++
1xh/Xd1D1K/Srv9l6fpX2nr0S7veVQ4PSxt/7eyNSrueNqWt77i09Qu6Z2Gv
tWH7nW3Y77vjcC59/HU3bD0L3euQLzdc/6TP99B3/qsN29/hhlvfZJ/4R7LP
/tDIPvGMJa/5v2nnc0v3XK2Huqeq/5su/032I+x3N+m31qtN249S9rV/yj76
ffHK3/FD8brHbNr9ZSQM30gfPN60+2XoWdzqMd+1H/WYf+h3ena/17uB7Hd7
Lv+e3S/Lnq1X7NnzQR/5ts5zepegn8OePX/V4CPOoyPp67zZs+e9cc+eB4Pe
MbDf2rL1y7asv47kdT7dsuf1rpMvtnhPIL4S+bbOz9LnPNzfIl7O+9WWjX8o
rPuF4sH/CFxzL2m27H1orPx0z9q296HWNvfHWfLn3Un3oM62vR/m8AH5ruS5
dxTiObeXYN2fo9614PviOUdXxHMEHm7z/qH7tOxz7hzJP+8FjeIFj2Vf57Cd
1J8JcGvHvo/onS3n3NDZwT/ngnzHvr90d+z7UYG95+Byx75fRfAk9vrYG7Dv
VfiP4KHja8XHujYShm+Qb7MvjXfor9ZF3hm1zrTAGXwGLuA7u9af3km1DnR3
k7/vwcUu7zHgcjf5P6/vepd6Y68P/wq+wn6N/yH2l+Fr52+EvRf0uXF4DH6l
dZF3Wb2Ptvbse2cGPk9dO3usl5pnklf+2CuwV+zxHq38wQO9xzr5vuTBlcPD
PfveW4MvEe8Iew18o3do9MfEe07r9r6tb2uf/ih/+Ir+dPaZT5wjc3jNz+4+
8TG/C72TI1+Cz87Vzl5f9rgnVPv2+x06XCt+7rUj7L0EN7LH+jCGX9a7iN71
WU9aYK13mX4nQL5zYN9/8gPiZz/pHtj9tDiw+115YPfH6OT7B+48j/yA89EQ
e5MXyVvx8TvCyMk34i+QP/EO+N0rPMYfv3u0HmN/gvyFPyJ/4V+Tv/TfJ//H
2H2X/B/j70Pyd/JR/HvkL/23yV/y75C//P+M/B0eST8jf9l/i/xl74fIPbF8
64nlM+Fz5C/M73+5w139LhXI3+FS8v9N8tH56zt7leJ7k/ydfu30R2f+0l/j
7I1dPOGp5VtPrX721PrrOPnc8d0zffJ39kqHo8N9hyuHh85f7fiRw43DY4fD
M4tbDmcOd55Z/7njuw4XTr50OD6z9ew7/crhocO1wyOHG4fHDodDi1sOZw53
Dl3+ju86XDj50vHR4b6Trxw/dLh2eORw4/D40NY7xDP+/yTzWyU=
           "]]}, {}}}, {}, {}, {{}, {}}}, {{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {85., 2548.}, Automatic, 
           Scaled[{0.04, 0.04}]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {135., 2978.}, Automatic, 
           Scaled[{0.04, 0.04}]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {185., 2923.}, Automatic, 
           Scaled[{0.04, 0.04}]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {227., 2646.}, Automatic, 
           Scaled[{0.04, 0.04}]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {285., 1769.}, Automatic, 
           Scaled[{0.04, 0.04}]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {337., 932.}, Automatic, 
           Scaled[{0.04, 0.04}]], 
          Inset[
           Graphics[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              AbsolutePointSize[6]], 
             Thickness[0.2], 
             Circle[{0, 0}]}], {386., 355.3333333333333}, Automatic, 
           Scaled[{0.04, 0.04}]]}, {}}}, {}, {}, {{}, {}}}}, {Epilog -> {
        Inset[
         Style[
         "\:9053\:5740", FontFamily -> "\:9ed1\:4f53", FontSize -> 10.5], 
         Scaled[{1.075, 0}]], 
        Inset[
         Style[
         "\:8ba1\:6570", FontFamily -> "\:9ed1\:4f53", FontSize -> 10.5], 
         Scaled[{0, 1.08}]]}, PlotRangeClipping -> False, DisplayFunction -> 
      Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 512.}, {0, 3500}}, PlotRangeClipping -> True, 
      ImagePadding -> {{50, 40}, {25, 30}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImagePadding -> {{50, 40}, {25, 30}}, ImageSize -> 
      Medium, LabelStyle -> {FontFamily -> "Times"}, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 512.}, {0, 3500}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      HoldForm[
       SwatchLegend[{
         RGBColor[0.9, 0.36, 0.054], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         RGBColor[0.945109, 0.593901, 0.], 
         RGBColor[0.645957, 0.253192, 0.685109], 
         RGBColor[0.285821, 0.56, 0.450773], 
         RGBColor[0.7, 0.336, 0.], 
         RGBColor[0.491486, 0.345109, 0.8], 
         RGBColor[0.71788, 0.568653, 0.], 
         RGBColor[0.70743, 0.224, 0.542415], 
         RGBColor[0.287228, 0.490217, 0.664674], 
         RGBColor[
         0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
         RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
         RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
         RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
         RGBColor[
         0.41497437140121635`, 0.393632147507352, 0.7842993779115092]}, {
        "\:2116 2", "\:2116 3", "\:2116 4", "\:2116 5", "\:2116 6", 
         "\:2116 7", "\:2116 8"}, LegendMarkerSize -> 6, 
        LabelStyle -> {FontSize -> 8, FontFamily -> "Times New Roman"}, 
        LegendLabel -> Placed["\:51fa\:5c04\:7a97\:53e3", {0, 1}]]]], {0.85, 
     0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7199285947453938`*^9, 3.719928614393715*^9}, {
   3.719928667764674*^9, 3.7199286896855507`*^9}, {3.7199287846949177`*^9, 
   3.7199288398713565`*^9}, {3.7199288903078566`*^9, 3.719929004517993*^9}, {
   3.7199641637564077`*^9, 3.719964259104988*^9}, {3.7199659459347935`*^9, 
   3.7199659509978647`*^9}, {3.719965999210508*^9, 3.7199660054063363`*^9}, {
   3.719966111296833*^9, 3.7199661450137773`*^9}, 3.7199664804877386`*^9, 
   3.720082083303481*^9, 3.7200835734768705`*^9, 3.7200836863528757`*^9, 
   3.7200847080640316`*^9, 3.7200896253098555`*^9, 3.720143822363041*^9, 
   3.7201623796405344`*^9, 3.7201695284498634`*^9, 3.7201721621412964`*^9, 
   3.7201729411694264`*^9, {3.720177110321514*^9, 3.7201771222261915`*^9}, 
   3.7202209461796417`*^9, 3.720222686106844*^9}],

Cell[BoxData["\<\"vacPlot.pdf\"\>"], "Output",
 CellChangeTimes->{{3.7199285947453938`*^9, 3.719928614393715*^9}, {
   3.719928667764674*^9, 3.7199286896855507`*^9}, {3.7199287846949177`*^9, 
   3.7199288398713565`*^9}, {3.7199288903078566`*^9, 3.719929004517993*^9}, {
   3.7199641637564077`*^9, 3.719964259104988*^9}, {3.7199659459347935`*^9, 
   3.7199659509978647`*^9}, {3.719965999210508*^9, 3.7199660054063363`*^9}, {
   3.719966111296833*^9, 3.7199661450137773`*^9}, 3.7199664804877386`*^9, 
   3.720082083303481*^9, 3.7200835734768705`*^9, 3.7200836863528757`*^9, 
   3.7200847080640316`*^9, 3.7200896253098555`*^9, 3.720143822363041*^9, 
   3.7201623796405344`*^9, 3.7201695284498634`*^9, 3.7201721621412964`*^9, 
   3.7201729411694264`*^9, {3.720177110321514*^9, 3.7201771222261915`*^9}, 
   3.7202209461796417`*^9, 3.7202226867475386`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", "\"\<vacPlot.pdf\>\"", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"vacColors", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "vacData", "]"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{"colors", ",", 
       RowBox[{"Length", "[", "vacData", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Clear", "[", "slit", "]"}]], "Input",
 CellChangeTimes->{{3.719971668159729*^9, 3.719971672628936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"slit_", ",", "xrangeRel_", ",", "yrangeRel_", ",", "gridRel_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xrange", ",", "yrange", ",", "plot", ",", "grid"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xrange", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
          "xrangeRel", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
          "xrangeRel", "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"yrange", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
          "yrangeRel", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
          "yrangeRel", "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"grid", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
             "1", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"gridRel", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
             "1", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"gridRel", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
             "2", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"gridRel", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"vacPeaks", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
             "2", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"gridRel", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}]}], "}"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"plot", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"vacPeaks", "[", "slit", "]"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"GrayLevel", "[", ".8", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotMarkers", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"omarker", ",", ".075"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"xrange", ",", "yrange"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GridLines", "\[Rule]", "grid"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"40", ",", "40"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"25", ",", "30"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<\:9ed1\:4f53\>\""}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "10.5"}]}], "]"}]}], ",", 
                 "#2"}], "]"}], "&"}], ")"}], "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<\:9053\:5740\>\"", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"1.075", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<\:8ba1\:6570\>\"", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.08"}], "}"}], "]"}]}], "}"}]}], 
              "}"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"HoldForm", "@", 
               RowBox[{"Evaluate", "@", 
                RowBox[{"SwatchLegend", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"vacColors", "[", "slit", "]"}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"\<\:2116 \>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], ")"}], "&"}], "/@", 
                   RowBox[{"{", "slit", "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"LegendMarkerSize", "\[Rule]", "6"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
                    "}"}]}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"{", 
                RowBox[{".95", ",", "1"}], "}"}], "]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Between", "[", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 ",", "xrange"}], "]"}], "\[IndentingNewLine]", "&&", 
               RowBox[{"Between", "[", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                 ",", "yrange"}], "]"}]}], "&"}], "]"}], "@", 
            RowBox[{"vacData", "[", "slit", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vacColors", "[", "slit", "]"}], ",", 
              RowBox[{"PointSize", "[", "Medium", "]"}]}], "}"}]}]}], "]"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Magnify", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "@", "plot"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7199664890484414`*^9, 3.719966517976363*^9}, {
   3.7199665545309496`*^9, 3.7199666438964014`*^9}, {3.7199666965455313`*^9, 
   3.71996687909482*^9}, {3.71996694859807*^9, 3.719966980574566*^9}, {
   3.719967074265006*^9, 3.71996717031434*^9}, 3.7199672338776207`*^9, {
   3.7199673497883434`*^9, 3.719967540562337*^9}, {3.7199675853010273`*^9, 
   3.7199676822430763`*^9}, {3.719967717308174*^9, 3.719967826327479*^9}, {
   3.719967888405365*^9, 3.7199679146557183`*^9}, {3.7199679556089916`*^9, 
   3.7199679715754786`*^9}, {3.7199680332738523`*^9, 3.71996812014205*^9}, {
   3.7199682229771757`*^9, 3.7199682283297124`*^9}, {3.7199682963192215`*^9, 
   3.719968332308324*^9}, {3.719968368659445*^9, 3.719968419270156*^9}, {
   3.719968528195868*^9, 3.7199687007366533`*^9}, {3.719968761250073*^9, 
   3.7199688450950375`*^9}, {3.719968982944865*^9, 3.719969034382244*^9}, {
   3.719969100045538*^9, 3.719969100342447*^9}, {3.7199692359635587`*^9, 
   3.719969663304534*^9}, {3.7199697068071165`*^9, 3.719969818320428*^9}, {
   3.719969887347537*^9, 3.7199698891758924`*^9}, {3.719969943304407*^9, 
   3.719969976838778*^9}, {3.719970027055771*^9, 3.719970300864168*^9}, {
   3.7199703420878367`*^9, 3.7199704927119975`*^9}, {3.7199705324780407`*^9, 
   3.7199706011033525`*^9}, {3.719970658914136*^9, 3.7199706606330476`*^9}, {
   3.7199708861069794`*^9, 3.719970992260152*^9}, {3.7199710274947248`*^9, 
   3.7199711405199137`*^9}, {3.719971173212821*^9, 3.719971418430705*^9}, {
   3.7199714606007643`*^9, 3.7199714821017594`*^9}, {3.7199716011643157`*^9, 
   3.719971662279252*^9}, {3.719971712165123*^9, 3.7199717137276216`*^9}, 
   3.719971818306576*^9, {3.7199718530580397`*^9, 3.7199718770262938`*^9}, {
   3.7199719090290623`*^9, 3.7199719341339884`*^9}, {3.719971975555502*^9, 
   3.7199720403397264`*^9}, {3.7199721480723743`*^9, 3.719972192393877*^9}, {
   3.7199722277610893`*^9, 3.7199722391444063`*^9}, {3.720082156389307*^9, 
   3.7200822372884927`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vacPeaks", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.720082261462926*^9, 3.7200822653071527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"85.`", ",", "2548.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7200822661977997`*^9, 3.720084708845364*^9, 
  3.7200896261068125`*^9, 3.7201438247226706`*^9, 3.720162381468852*^9, 
  3.720169529793753*^9, 3.720172165026973*^9, 3.7201729419038515`*^9, 
  3.7202209478583317`*^9, 3.720222686935057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vacPeak2", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "sigma"}], ",", "sigma"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "500"}], ",", "150"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"+", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak3", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "sigma"}], ",", "sigma"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "500"}], ",", "150"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"+", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak4", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "sigma"}], ",", "sigma"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "500"}], ",", "150"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"+", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak5", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "sigma"}], ",", "sigma"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "500"}], ",", "150"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"+", "6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak6", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"6", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "sigma"}], ",", "sigma"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "500"}], ",", "150"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", 
         RowBox[{"+", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak7", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"7", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "sigma"}], ",", "sigma"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "250"}], ",", "100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", 
         RowBox[{"+", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak8", "=", 
   RowBox[{"vacPeaksShow", "[", 
    RowBox[{"8", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "sigma"}], ",", 
       RowBox[{"2", "sigma"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "250"}], ",", "100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "6"}], ",", 
         RowBox[{"+", "6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "100"}], ",", "50"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak7"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "vacPeak8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"HideText", "[", "\"\<findPeaks\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7199718872404127`*^9, 3.7199719174880857`*^9}, {
  3.719972199119151*^9, 3.719972214575424*^9}, {3.719972245393408*^9, 
  3.719972287574074*^9}, {3.720082093726428*^9, 3.720082109228071*^9}, {
  3.720082249899278*^9, 3.720082672827751*^9}, {3.7200837941789217`*^9, 
  3.720083892681946*^9}, {3.7201759501711483`*^9, 3.720175962796769*^9}}],

Cell[BoxData["\<\"findPeaks\"\>"], "Print",
 CellChangeTimes->{3.7201759661406393`*^9, 3.72018689032927*^9, 
  3.720220949739213*^9, 3.7202226887814083`*^9}]
}, {2}]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"eFunction", "[", "n_", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "0.00437005655769313`"}], " ", 
    RowBox[{"(", 
     RowBox[{"0.24046807248545032`", "\[VeryThinSpace]", "-", "n"}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7200896296413393`*^9, 3.720089637578682*^9}, {
   3.7200896841199675`*^9, 3.7200896958331966`*^9}, 3.720175974599147*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vacPeaksShift", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{"#1", "\[Rule]", "#2"}], "]"}], "&"}], "@@", 
    RowBox[{"Transpose", "@", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
       "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;", "8"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}]}], "\[RightDoubleBracket]"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.720176132326517*^9, 3.7201762608474917`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mod1Data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
       "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;", "9"}], ",", "#"}], "\[RightDoubleBracket]"}], "&"}],
     "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mod2Data", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
       "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;", "37"}], ",", "#"}], "\[RightDoubleBracket]"}], 
     "&"}], "@", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mod1", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"mod1Data", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mod2", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"mod2Data", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7201438362987747`*^9, 3.7201440340888505`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vacEPeaksWithError", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
     "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"2", ";;", "8"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "12"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"vacData", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
        "6.15"}], ")"}], "/", "2"}], "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]], "*", "60.3", ".4", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]], "*", 
     RowBox[{"299792458", "/", 
      SuperscriptBox["10", "6"]}]}], ")"}], "//", "Values"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPwithError", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"%", ",", 
      RowBox[{
       RowBox[{".1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"vacData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
           "-", "6.15"}], "//", "Values"}], ")"}]}], "*", "%"}]}], "}"}], 
    "\[Transpose]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.720163153437666*^9, 3.720163216334982*^9}, {
   3.7201633625067525`*^9, 3.720163408652322*^9}, {3.7201634584231987`*^9, 
   3.720163472580954*^9}, {3.7201635209767504`*^9, 3.720163526524212*^9}, {
   3.720163621703602*^9, 3.7201636286254587`*^9}, {3.7201703682339754`*^9, 
   3.7201703704729395`*^9}, {3.720170436023423*^9, 3.720170453908186*^9}, {
   3.720173082492422*^9, 3.720173116445982*^9}, {3.7201731513525257`*^9, 
   3.720173161980266*^9}, {3.7201732385880256`*^9, 3.7201732835192194`*^9}, {
   3.720173349654258*^9, 3.720173390616632*^9}, {3.720176427374624*^9, 
   3.7201764415874424`*^9}, 3.7202260692783985`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"epPts", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"vacPwithError", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", "1", "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"vacEPeaksWithError", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", "1", "}"}]}], "\[RightDoubleBracket]"}], ",", "2"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epError", "=", 
   RowBox[{"ErrorBar", "@@@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"vacPwithError", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", "2", "}"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"vacEPeaksWithError", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", "2", "}"}]}], "\[RightDoubleBracket]"}], ",", "2"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.720163606658402*^9, 3.720163607917167*^9}, {
  3.7201636690970078`*^9, 3.7201637540845933`*^9}, {3.7201637964916863`*^9, 
  3.720163800802077*^9}, {3.720163839130953*^9, 3.7201638393341*^9}, {
  3.720163872217949*^9, 3.720163913374115*^9}, {3.7201639733911257`*^9, 
  3.720163985783634*^9}, {3.7201640797411685`*^9, 3.720164081225685*^9}, {
  3.720164538240153*^9, 3.720164620547287*^9}, {3.7201653763107104`*^9, 
  3.720165403217481*^9}, {3.7201659669522905`*^9, 3.7201660065545597`*^9}, {
  3.7201670119161696`*^9, 3.7201670334340525`*^9}, {3.7201670687190485`*^9, 
  3.7201671562595596`*^9}, {3.720176475195838*^9, 3.720176478787397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"epRelations", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox[".511", "2"], "+", 
            SuperscriptBox["p", "2"]}]], "-", ".511"}], ",", 
         FractionBox[
          SuperscriptBox["p", "2"], 
          RowBox[{"2", "*", ".511"}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "0", ",", "2.4"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", ".002", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRangePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImagePadding", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"45", ",", "35"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"40", ",", "32"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"HoldForm", "@", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"LineLegend", "[", 
             RowBox[{"colors", ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\:76f8\:5bf9\:8bba\:9884\:6d4b\>\"", ",", 
                "\"\<\:7ecf\:5178\:9884\:6d4b\>\""}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FontSize", "\[Rule]", "8"}], ",", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
                "}"}]}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{".25", ",", ".7"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ErrorListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "epPts", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "epError", "\[LeftDoubleBracket]", "#", 
            "\[RightDoubleBracket]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "epPts", "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", ".35", "]"}], ",", 
          RowBox[{"PointSize", "[", ".001", "]"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ErrorBarFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"coords", ",", " ", "errs"}], "}"}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "1", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"coords", "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"errs", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"errs", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}], ",", 
              RowBox[{"coords", "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"errs", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"errs", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                "}"}]}]}], "]"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "2.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"Evaluate", "@", 
            RowBox[{"Style", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<\:9ed1\:4f53\>\""}], ",", 
              RowBox[{"FontSize", "\[Rule]", "10.5"}]}], "]"}]}], ",", "#2"}],
           "]"}], "&"}], ")"}], "@@@", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MaTeX", "[", 
            RowBox[{"\"\<p/\\\\frac{\\\\si{\\\\MeV}}{c}\>\"", ",", 
             RowBox[{"Magnification", "\[Rule]", ".8"}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{".5", ",", 
              RowBox[{"-", ".145"}]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"MaTeX", "[", 
            RowBox[{"\"\<E/\\\\si{\\\\MeV}\>\"", ",", 
             RowBox[{"Magnification", "\[Rule]", ".8"}]}], "]"}], ",", 
           RowBox[{"Scaled", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.08"}], "}"}], "]"}]}], "}"}]}], "}"}]}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "epRelations"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"HideText", "[", "\"\<epRelations\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7200898392731113`*^9, 3.7200898930820913`*^9}, {
   3.7200904612352695`*^9, 3.720090472556959*^9}, {3.720090518394642*^9, 
   3.7200905879651957`*^9}, {3.7200907367769527`*^9, 3.720090738261492*^9}, {
   3.720090814010167*^9, 3.720090821934076*^9}, {3.7200911135679607`*^9, 
   3.7200912826295404`*^9}, {3.720091338341914*^9, 3.7200913479914827`*^9}, {
   3.7200913805575056`*^9, 3.720091380948221*^9}, {3.72009147790303*^9, 
   3.7200914782155604`*^9}, {3.7200916679871535`*^9, 3.720091873719977*^9}, {
   3.7200919288642874`*^9, 3.720091965014677*^9}, {3.720092301305008*^9, 
   3.7200923025395546`*^9}, {3.7200924646451406`*^9, 
   3.7200924967519474`*^9}, {3.7201440416573286`*^9, 3.720144045535357*^9}, 
   3.7201440989592876`*^9, {3.720145260113679*^9, 3.720145332387039*^9}, {
   3.720145380454668*^9, 3.720145885977753*^9}, {3.720145918231222*^9, 
   3.720145948906396*^9}, {3.7201459802066317`*^9, 3.7201463187080946`*^9}, 
   3.720167148383708*^9, {3.720167182121746*^9, 3.720167207482844*^9}, 
   3.7201672556129947`*^9, {3.720167335262082*^9, 3.72016733815298*^9}, {
   3.7201695703082237`*^9, 3.7201696535424805`*^9}, {3.7201734737926283`*^9, 
   3.7201735668026805`*^9}, {3.7201746877108507`*^9, 
   3.7201749328470974`*^9}, {3.7201749715454907`*^9, 
   3.7201750459715476`*^9}, {3.720175082880272*^9, 3.720175112835907*^9}, {
   3.720175647612748*^9, 3.7201756952926145`*^9}, {3.7201758269053116`*^9, 
   3.7201758668195515`*^9}, {3.7201791639082003`*^9, 3.7201791950351644`*^9}, 
   3.720179234079826*^9}],

Cell[BoxData["\<\"epRelations\"\>"], "Print",
 CellChangeTimes->{{3.7201758495806465`*^9, 3.7201758688027935`*^9}, 
   3.720176484372254*^9, 3.7201856750012465`*^9, 3.720220955525778*^9, 
   3.720222694242879*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vacAirCompare", "[", "slit_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "plot", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plot", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"vacData", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"airData", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRangePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "300"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImagePadding", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"50", ",", "40"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"25", ",", "30"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"HoldForm", "@", 
               RowBox[{"Evaluate", "@", 
                RowBox[{"SwatchLegend", "[", 
                 RowBox[{
                  RowBox[{"colors", "\[LeftDoubleBracket]", 
                   RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ToString", "[", "#", "]"}], ")"}], "&"}], "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\:771f\:7a7a\:60c5\:5f62\>\"", ",", 
                    "\"\<\:5927\:6c14\:538b\:4e0b\>\""}], "}"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"LegendMarkerSize", "\[Rule]", "8"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Spacings", "\[Rule]", ".9"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "9"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\"\<\:9ed1\:4f53\>\""}]}], 
                    "}"}]}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{".8", ",", ".75"}], "}"}]}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{"#1", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<\:9ed1\:4f53\>\""}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "10.5"}]}], "]"}]}], ",", 
                 "#2"}], "]"}], "&"}], ")"}], "@@@", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<\:9053\:5740\>\"", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"1.075", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"\"\<\:8ba1\:6570\>\"", ",", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1.08"}], "}"}], "]"}]}], "}"}]}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "#", "}"}], "&"}], "@", 
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"HoldForm", "@", 
                RowBox[{"Evaluate", "@", 
                 RowBox[{"Style", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\"\<\:2116 \>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], ")"}], "&"}], "@", 
                    "slit"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"FontSize", "\[Rule]", "10"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                   "FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}]}], 
                  "]"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Scaled", "[", 
                RowBox[{"{", 
                 RowBox[{".95", ",", "1.08"}], "}"}], "]"}]}], "]"}]}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"Magnify", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "&"}], "@"}], "*)"}], "plot", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HideText", "[", "\"\<vacAirComp\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.7199664890484414`*^9, 3.719966517976363*^9}, {
   3.7199665545309496`*^9, 3.7199666438964014`*^9}, {3.7199666965455313`*^9, 
   3.71996687909482*^9}, {3.71996694859807*^9, 3.719966980574566*^9}, {
   3.719967074265006*^9, 3.71996717031434*^9}, 3.7199672338776207`*^9, {
   3.7199673497883434`*^9, 3.719967540562337*^9}, {3.7199675853010273`*^9, 
   3.7199676822430763`*^9}, {3.719967717308174*^9, 3.719967826327479*^9}, {
   3.719967888405365*^9, 3.7199679146557183`*^9}, {3.7199679556089916`*^9, 
   3.7199679715754786`*^9}, {3.7199680332738523`*^9, 3.71996812014205*^9}, {
   3.7199682229771757`*^9, 3.7199682283297124`*^9}, {3.7199682963192215`*^9, 
   3.719968332308324*^9}, {3.719968368659445*^9, 3.719968419270156*^9}, {
   3.719968528195868*^9, 3.7199687007366533`*^9}, {3.719968761250073*^9, 
   3.7199688450950375`*^9}, {3.719968982944865*^9, 3.719969034382244*^9}, {
   3.719969100045538*^9, 3.719969100342447*^9}, {3.7199692359635587`*^9, 
   3.719969663304534*^9}, {3.7199697068071165`*^9, 3.719969818320428*^9}, {
   3.719969887347537*^9, 3.7199698891758924`*^9}, {3.719969943304407*^9, 
   3.719969976838778*^9}, {3.719970027055771*^9, 3.719970300864168*^9}, {
   3.7199703420878367`*^9, 3.7199704927119975`*^9}, {3.7199705324780407`*^9, 
   3.7199706011033525`*^9}, {3.719970658914136*^9, 3.7199706606330476`*^9}, {
   3.7199708861069794`*^9, 3.719970992260152*^9}, {3.7199710274947248`*^9, 
   3.7199711405199137`*^9}, {3.719971173212821*^9, 3.719971418430705*^9}, {
   3.7199714606007643`*^9, 3.7199714821017594`*^9}, {3.7199716011643157`*^9, 
   3.719971662279252*^9}, {3.719971712165123*^9, 3.7199717137276216`*^9}, 
   3.719971818306576*^9, {3.7199718530580397`*^9, 3.7199718770262938`*^9}, {
   3.7199719090290623`*^9, 3.7199719341339884`*^9}, {3.719971975555502*^9, 
   3.7199720403397264`*^9}, {3.7199721480723743`*^9, 3.719972192393877*^9}, {
   3.7199722277610893`*^9, 3.7199722391444063`*^9}, {3.720082156389307*^9, 
   3.7200822372884927`*^9}, {3.720176559536254*^9, 3.7201765956594005`*^9}, {
   3.7201766259690237`*^9, 3.7201767476598244`*^9}, {3.720176792676608*^9, 
   3.720176796886811*^9}, {3.7201768502257376`*^9, 3.7201769201523457`*^9}, {
   3.7201769966539106`*^9, 3.720177056672762*^9}, {3.7201771358324213`*^9, 
   3.7201771856479783`*^9}, {3.720177216472966*^9, 3.720177254752824*^9}, {
   3.720177293540865*^9, 3.7201773516725826`*^9}, {3.720177682039532*^9, 
   3.720177766353527*^9}, {3.7201778097309513`*^9, 3.720177881283715*^9}, {
   3.72017792278013*^9, 3.7201779289415255`*^9}, {3.720177960585761*^9, 
   3.720178032521134*^9}, {3.7201780662147875`*^9, 3.7201781522226424`*^9}, {
   3.72017925555097*^9, 3.720179312997862*^9}, {3.720179383524418*^9, 
   3.7201793905258512`*^9}, {3.720179420989319*^9, 3.7201794543638735`*^9}, 
   3.7201794913528643`*^9, {3.720179544046915*^9, 3.720179589078907*^9}, {
   3.7201796522248106`*^9, 3.720179653615615*^9}, {3.720179704178557*^9, 
   3.7201797440143905`*^9}, {3.7201798374862194`*^9, 
   3.7201799020193663`*^9}, {3.7201799475491505`*^9, 3.720179979152054*^9}, {
   3.7201807246316032`*^9, 3.7201807932808285`*^9}, {3.720187074255491*^9, 
   3.7201870759275455`*^9}, {3.7201871136536922`*^9, 
   3.7201871408179765`*^9}, {3.720188008921624*^9, 3.7201880147530746`*^9}}],

Cell[BoxData["\<\"vacAirComp\"\>"], "Print",
 CellChangeTimes->{3.7201807938590093`*^9, 3.720187116497719*^9, 
  3.720187157629137*^9, 3.7201872626174035`*^9, 3.7201880155500364`*^9, 
  3.7202209556351748`*^9, 3.7202212576215677`*^9, 3.7202226943678913`*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Export", "@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringDelete", "[", "\"\<Inactive\>\"", "]"}], "@", 
        RowBox[{
         RowBox[{"StringDelete", "[", "\"\<[\>\"", "]"}], "@", 
         RowBox[{
          RowBox[{"StringDelete", "[", "\"\<]\>\"", "]"}], "@", 
          RowBox[{"ToString", "[", "#", "]"}]}]}]}], "<>", "\"\<.pdf\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Activate", "[", "#", "]"}]}], "}"}]}], "&"}], "/@", 
  RowBox[{
   RowBox[{"Inactive", "[", "vacAirCompare", "]"}], "/@", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6", ",", "8"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7201795210114756`*^9, 3.7201795393977623`*^9}, {
   3.7201799060054736`*^9, 3.720179926846438*^9}, {3.720179962682767*^9, 
   3.720180020895461*^9}, {3.7201800645117164`*^9, 3.720180087081098*^9}, {
   3.720180119983529*^9, 3.720180120671029*^9}, {3.7201802284079*^9, 
   3.7201803019310756`*^9}, {3.7201803325057707`*^9, 3.720180370387102*^9}, {
   3.72018050259904*^9, 3.720180532584972*^9}, 3.7201807291466813`*^9, 
   3.7201807956417785`*^9, {3.720187128309273*^9, 3.720187129746872*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"vacAirCompare3.pdf\"\>", ",", "\<\"vacAirCompare4.pdf\"\>", 
   ",", "\<\"vacAirCompare6.pdf\"\>", ",", "\<\"vacAirCompare8.pdf\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.720179983261411*^9, 3.7201800123761063`*^9}, 
   3.7201800525484877`*^9, 3.7201800882080345`*^9, {3.7201802431313305`*^9, 
   3.7201802701893477`*^9}, 3.7201803041372676`*^9, {3.7201803370597153`*^9, 
   3.7201803726976404`*^9}, {3.7201805152445693`*^9, 3.720180535478634*^9}, 
   3.7201807982670264`*^9, 3.7201871845105085`*^9, 3.7201880199411383`*^9, 
   3.7202209569260464`*^9, 3.720222695789917*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"peaksN", "=", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"2", ",", "8"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", "\"\<data.xlsx\>\"", "]"}], 
       "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;", "8"}], ",", "7"}], "\[RightDoubleBracket]"}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotBgRemoved", "[", 
    RowBox[{"slit_", ",", "fitRange_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"vacAirCompare", "[", "slit", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"a", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "k"}], " ", "n"}]]}], "/.", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"NonlinearModelFit", "[", 
               RowBox[{"#", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "k"}], " ", "n"}]]}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{
                    RowBox[{"peaksN", "[", "slit", "]"}], ",", "d"}], "]"}], 
                    ",", "n"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "b", ",", "d", ",", "k"}], "}"}], ",", 
                "n"}], "]"}], "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], 
            "/@", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"vacData", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
               "fitRange", "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"airData", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
               "fitRange", "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], 
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "512"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotBgRemoved3", "=", 
   RowBox[{"plotBgRemoved", "[", 
    RowBox[{"3", ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "60"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"250", ",", "513"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotBgRemoved4", "=", 
   RowBox[{"plotBgRemoved", "[", 
    RowBox[{"4", ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "60"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"250", ",", "513"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotBgRemoved6", "=", 
   RowBox[{"plotBgRemoved", "[", 
    RowBox[{"6", ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"10", ",", "100"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"350", ",", "513"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotBgRemoved8", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"plotBgRemoved", "[", 
      RowBox[{"8", ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"10", ",", "120"}], "]"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"350", ",", "513"}], "]"}]}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "512"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "350"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "plotBgRemoved3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "plotBgRemoved4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "plotBgRemoved6"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Export", "@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"ReleaseHold", "[", "#", "]"}]}], "}"}]}], "&"}], "@", 
   RowBox[{"HoldForm", "@", "plotBgRemoved8"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.720183729101192*^9, 3.7201837315806546`*^9}, {
  3.7201839830245543`*^9, 3.7201840435365534`*^9}, {3.7201847077056665`*^9, 
  3.72018473949367*^9}, {3.7201847826977262`*^9, 3.720184857935206*^9}, {
  3.7201848949129725`*^9, 3.720185083166321*^9}, {3.720185158790574*^9, 
  3.720185252405345*^9}, {3.720185438170107*^9, 3.720185457774528*^9}, {
  3.7201855713966503`*^9, 3.7201855888714447`*^9}, {3.720185633538781*^9, 
  3.7201859527171483`*^9}, {3.720186005770323*^9, 3.7201860170364046`*^9}, {
  3.720186231662524*^9, 3.7201863697736406`*^9}, {3.720186406868313*^9, 
  3.7201868610022106`*^9}, {3.720186893391261*^9, 3.720186939226881*^9}, {
  3.7201869904472456`*^9, 3.7201870127687187`*^9}, {3.720187277663809*^9, 
  3.720187338956112*^9}, {3.720187373202606*^9, 3.720187383679038*^9}, {
  3.720188167017423*^9, 3.7201882182213864`*^9}, {3.7201882616364765`*^9, 
  3.7201882628866854`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bgFunc", "[", 
   RowBox[{"slit_", ",", "fitRange_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"a", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "k"}], " ", "n"}]]}], "/.", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"#", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"-", "k"}], " ", "n"}]]}], "+", 
            RowBox[{"b", " ", 
             RowBox[{"PDF", "[", 
              RowBox[{
               RowBox[{"NormalDistribution", "[", 
                RowBox[{
                 RowBox[{"peaksN", "[", "slit", "]"}], ",", "d"}], "]"}], ",",
                "n"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "d", ",", "k"}], "}"}], ",", "n"}], 
         "]"}], "[", "\"\<BestFitParameters\>\"", "]"}], "&"}], "/@", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"vacData", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
         "fitRange", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
         RowBox[{"airData", "[", "slit", "]"}], "\[LeftDoubleBracket]", 
         "fitRange", "\[RightDoubleBracket]"}]}], "}"}]}], ")"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.72022107596896*^9, 3.7202210905146313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"bgFunc", "[", 
       RowBox[{"3", ",", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"10", ",", "60"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"250", ",", "513"}], "]"}]}], "]"}]}], "]"}], "/.", 
      RowBox[{"n", "\[Rule]", "n0"}]}], "//", "N"}], ",", 
    RowBox[{"{", 
     RowBox[{"n0", ",", "2", ",", "10"}], "}"}]}], "]"}], 
  "\[Transpose]"}]], "Input",
 CellChangeTimes->{{3.7202211075782113`*^9, 3.7202211384720445`*^9}, {
  3.7202211742430887`*^9, 3.720221225372688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3235.042332224382`", ",", "3177.860111333957`", ",", 
     "3121.6886365328146`", ",", "3066.510041994112`", ",", 
     "3012.3067776852195`", ",", "2959.0616037857844`", ",", 
     "2906.757585204454`", ",", "2855.378086192522`", ",", 
     "2804.906765052785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2307.017668116547`", ",", "2265.0238741000667`", ",", 
     "2223.7944776693835`", ",", "2183.3155647764124`", ",", 
     "2143.57347464537`", ",", "2104.554795162547`", ",", 
     "2066.246358350009`", ",", "2028.6352359216787`", ",", 
     "1991.7087349203152`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7202211115474615`*^9, {3.7202211716959085`*^9, 3.720221181733653*^9}, {
   3.7202212178726234`*^9, 3.720221227701059*^9}, 3.7202226986237164`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"bg3raw", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"bgFunc", "[", 
            RowBox[{"3", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"10", ",", "60"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"250", ",", "513"}], "]"}]}], "]"}]}], "]"}], "/.", 
           RowBox[{"n", "\[Rule]", "n0"}]}], "//", "N"}], ",", 
         RowBox[{"{", 
          RowBox[{"n0", ",", "2", ",", "513", ",", "1"}], "}"}]}], "]"}], 
       "\[Transpose]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bg4raw", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"bgFunc", "[", 
            RowBox[{"4", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"10", ",", "60"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"250", ",", "513"}], "]"}]}], "]"}]}], "]"}], "/.", 
           RowBox[{"n", "\[Rule]", "n0"}]}], "//", "N"}], ",", 
         RowBox[{"{", 
          RowBox[{"n0", ",", "2", ",", "513", ",", "1"}], "}"}]}], "]"}], 
       "\[Transpose]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bg6raw", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"bgFunc", "[", 
            RowBox[{"6", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"10", ",", "100"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"350", ",", "513"}], "]"}]}], "]"}]}], "]"}], "/.", 
           RowBox[{"n", "\[Rule]", "n0"}]}], "//", "N"}], ",", 
         RowBox[{"{", 
          RowBox[{"n0", ",", "2", ",", "513", ",", "1"}], "}"}]}], "]"}], 
       "\[Transpose]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bg8raw", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"bgFunc", "[", 
            RowBox[{"8", ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"10", ",", "120"}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"350", ",", "513"}], "]"}]}], "]"}]}], "]"}], "/.", 
           RowBox[{"n", "\[Rule]", "n0"}]}], "//", "N"}], ",", 
         RowBox[{"{", 
          RowBox[{"n0", ",", "2", ",", "513", ",", "1"}], "}"}]}], "]"}], 
       "\[Transpose]"}], ")"}]}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.720221524126047*^9, 3.7202215362144423`*^9}, {
   3.7202215811675005`*^9, 3.720221594247838*^9}, {3.7202216493077064`*^9, 
   3.720221650229755*^9}, {3.7202218263094053`*^9, 3.7202218911445312`*^9}, {
   3.7202227286802354`*^9, 3.72022274665664*^9}, {3.720223029450605*^9, 
   3.720223096007124*^9}, {3.7202233331756268`*^9, 3.720223374552462*^9}, 
   3.7202234157846203`*^9, {3.7202238164839053`*^9, 3.720223837997926*^9}, 
   3.720224090552313*^9, {3.720224526484997*^9, 3.7202245323721724`*^9}, {
   3.7202248451126113`*^9, 3.7202248484776134`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<bg.dat\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "bg3raw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "bg3raw", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "bg4raw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "bg4raw", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "bg6raw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "bg6raw", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
       "bg8raw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "bg8raw", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.720224850040324*^9, 3.720224951273638*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bg3", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"bg3", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"bg4", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"bg4", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"bg6", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"bg6", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"bg8", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     ",", 
     RowBox[{"bg8", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
    "}"}], "=", 
   RowBox[{"Import", "[", "\"\<bg.dat\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720224349837121*^9, 3.7202245186153545`*^9}, 
   3.7202246320394664`*^9, {3.7202249613108544`*^9, 3.7202249954315367`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vacData", "[", "3", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg3", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"airData", "[", "3", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg3", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak3Range", "=", 
   RowBox[{"30", ";;", "200"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peak3vac", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vacData", "[", "3", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"vacPeak3Range", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg3", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "vacPeak3Range"}], "\[RightDoubleBracket]"}]}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"airPeak3Range", "=", 
   RowBox[{"30", ";;", "260"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peak3air", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"airData", "[", "3", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"airPeak3Range", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg3", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "airPeak3Range"}], "\[RightDoubleBracket]"}]}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<3vac:\>\"", ",", 
    RowBox[{"Round", "[", 
     RowBox[{"Plus", "@@", "peak3vac"}], "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<3air:\>\"", ",", 
    RowBox[{"Round", "[", 
     RowBox[{"Plus", "@@", "peak3air"}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.720221262613971*^9, 3.720221393999323*^9}, {
   3.7202214379528003`*^9, 3.720221442666106*^9}, {3.720221481424199*^9, 
   3.720221502769967*^9}, {3.720221935541244*^9, 3.720222013596967*^9}, 
   3.7202220452717705`*^9, {3.7202220850087795`*^9, 3.720222675580877*^9}, {
   3.7202250494593363`*^9, 3.7202250684256706`*^9}, {3.720225140685588*^9, 
   3.7202251486856956`*^9}, {3.720225428674572*^9, 3.720225445407832*^9}, {
   3.7202254755464807`*^9, 3.7202254872295084`*^9}}],

Cell[BoxData[
 TemplateBox[{"\"3vac:\"","111308"},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.720222372673813*^9, 3.720222389860506*^9}, {
   3.720222437129603*^9, 3.720222520604766*^9}, {3.7202225673373427`*^9, 
   3.720222645937682*^9}, 3.7202226762684402`*^9, 3.7202227241328506`*^9, 
   3.720223427740182*^9, 3.720224536354003*^9, {3.7202250264497547`*^9, 
   3.720225068988145*^9}, 3.720225149217004*^9, 3.7202252357115893`*^9, {
   3.7202254310986376`*^9, 3.720225446861063*^9}, 3.720225488995325*^9}],

Cell[BoxData[
 TemplateBox[{"\"3air:\"","59190"},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.720222372673813*^9, 3.720222389860506*^9}, {
   3.720222437129603*^9, 3.720222520604766*^9}, {3.7202225673373427`*^9, 
   3.720222645937682*^9}, 3.7202226762684402`*^9, 3.7202227241328506`*^9, 
   3.720223427740182*^9, 3.720224536354003*^9, {3.7202250264497547`*^9, 
   3.720225068988145*^9}, 3.720225149217004*^9, 3.7202252357115893`*^9, {
   3.7202254310986376`*^9, 3.720225446861063*^9}, 3.720225488995325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vacData", "[", "4", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg4", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"airData", "[", "4", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg4", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak4Range", "=", 
   RowBox[{"50", ";;", "260"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peak4vac", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"vacData", "[", "4", "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"vacPeak4Range", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
      RowBox[{"bg4", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "vacPeak4Range"}], "\[RightDoubleBracket]"}]}], 
     ")"}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"airPeak4Range", "=", 
   RowBox[{"50", ";;", "280"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peak4air", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"airData", "[", "4", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"airPeak4Range", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg4", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "airPeak4Range"}], "\[RightDoubleBracket]"}]}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<4vac:\>\"", ",", 
    RowBox[{"Round", "[", 
     RowBox[{"Plus", "@@", "peak4vac"}], "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<4air:\>\"", ",", 
    RowBox[{"Round", "[", 
     RowBox[{"Plus", "@@", "peak4air"}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.720221262613971*^9, 3.720221393999323*^9}, {
   3.7202214379528003`*^9, 3.720221442666106*^9}, {3.720221481424199*^9, 
   3.720221502769967*^9}, {3.720221935541244*^9, 3.720222013596967*^9}, 
   3.7202220452717705`*^9, {3.7202220850087795`*^9, 3.720222675580877*^9}, {
   3.7202250494593363`*^9, 3.7202250684256706`*^9}, {3.720225140685588*^9, 
   3.7202253242247596`*^9}, {3.7202253559019823`*^9, 
   3.7202253995379915`*^9}, {3.7202254960490093`*^9, 3.72022554834525*^9}}],

Cell[BoxData[
 TemplateBox[{"\"4vac:\"","131269"},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.720225165003973*^9, 3.7202251765833273`*^9}, {
   3.720225275733768*^9, 3.720225324771696*^9}, {3.7202253590703363`*^9, 
   3.7202254002567453`*^9}, 3.720225497549138*^9, {3.7202255439523787`*^9, 
   3.7202255488223653`*^9}}],

Cell[BoxData[
 TemplateBox[{"\"4air:\"","65565"},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.720225165003973*^9, 3.7202251765833273`*^9}, {
   3.720225275733768*^9, 3.720225324771696*^9}, {3.7202253590703363`*^9, 
   3.7202254002567453`*^9}, 3.720225497549138*^9, {3.7202255439523787`*^9, 
   3.7202255488223653`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vacData", "[", "6", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg6", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"airData", "[", "6", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg6", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vacPeak6Range", "=", 
   RowBox[{"50", ";;", "350"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peak6vac", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"vacData", "[", "6", "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"vacPeak6Range", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
      RowBox[{"bg4", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "vacPeak6Range"}], "\[RightDoubleBracket]"}]}], 
     ")"}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"airPeak6Range", "=", 
   RowBox[{"50", ";;", "380"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"peak6air", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"airData", "[", "6", "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"airPeak6Range", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
     RowBox[{"bg4", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "airPeak6Range"}], "\[RightDoubleBracket]"}]}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", "0"}], "&"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<6vac:\>\"", ",", 
    RowBox[{"Round", "[", 
     RowBox[{"Plus", "@@", "peak6vac"}], "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<6air:\>\"", ",", 
    RowBox[{"Round", "[", 
     RowBox[{"Plus", "@@", "peak6air"}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.720221262613971*^9, 3.720221393999323*^9}, {
   3.7202214379528003`*^9, 3.720221442666106*^9}, {3.720221481424199*^9, 
   3.720221502769967*^9}, {3.720221935541244*^9, 3.720222013596967*^9}, 
   3.7202220452717705`*^9, {3.7202220850087795`*^9, 3.720222675580877*^9}, {
   3.7202250494593363`*^9, 3.7202250684256706`*^9}, {3.720225140685588*^9, 
   3.7202253242247596`*^9}, {3.7202253559019823`*^9, 
   3.7202253995379915`*^9}, {3.7202254960490093`*^9, 3.7202256370099115`*^9}}],

Cell[BoxData[
 TemplateBox[{"\"6vac:\"","107650"},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.720225606961175*^9, 3.720225637494256*^9}}],

Cell[BoxData[
 TemplateBox[{"\"6air:\"","45078"},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.720225606961175*^9, 3.720225637494256*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"Plus", "@@", "peak3vac"}], "]"}], ",", 
      RowBox[{"Round", "[", 
       RowBox[{"Plus", "@@", "peak3air"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"Plus", "@@", "peak4vac"}], "]"}], ",", 
      RowBox[{"Round", "[", 
       RowBox[{"Plus", "@@", "peak4air"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"Plus", "@@", "peak6vac"}], "]"}], ",", 
      RowBox[{"Round", "[", 
       RowBox[{"Plus", "@@", "peak6air"}], "]"}]}], "}"}]}], "}"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.720225713869612*^9, 3.720225767198279*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"111308", "59190"},
    {"131269", "65565"},
    {"107650", "45078"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7202257309483013`*^9, 3.72022576752637*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vacData", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "-",
          "6.15"}], ")"}], "/", "2"}], ")"}], "/@", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "6"}], "}"}]}], ",", ".1"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.7202261682240696`*^9, 3.7202262579984283`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"6.300000000000001`"},
     {"7.5`"},
     {"9.8`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7202261799786253`*^9, 3.720226210184429*^9}, {
  3.720226251176667*^9, 3.720226258420273*^9}}]
}, Open  ]]
},
WindowSize->{1139, 664},
WindowMargins->{{Automatic, 32}, {-6, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e7410\:67088\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 286, 4, 30, "Input"],
Cell[847, 26, 477, 12, 69, "Input"],
Cell[1327, 40, 58, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[1410, 45, 1573, 41, 126, "Input"],
Cell[2986, 88, 1249, 17, 22, "Print"]
}, {2}]],
Cell[CellGroupData[{
Cell[4269, 110, 1055, 24, 69, "Input"],
Cell[5327, 136, 1385, 19, 22, "Print"]
}, {2}]],
Cell[CellGroupData[{
Cell[6746, 160, 1128, 28, 50, "Input"],
Cell[7877, 190, 24676, 647, 30, "Output"]
}, Open  ]],
Cell[32568, 840, 2567, 62, 50, "Input"],
Cell[35138, 904, 770, 19, 50, "Input"],
Cell[CellGroupData[{
Cell[35933, 927, 1544, 36, 88, "Input"],
Cell[37480, 965, 2565, 75, 131, "Output"],
Cell[40048, 1042, 24575, 472, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64660, 1519, 1751, 40, 107, "Input"],
Cell[66414, 1561, 2655, 76, 131, "Output"],
Cell[69072, 1639, 1304, 30, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70413, 1674, 102, 1, 30, "Input"],
Cell[70518, 1677, 1062, 28, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71617, 1710, 12973, 234, 461, "Input"],
Cell[84593, 1946, 89072, 1671, 237, "Output"],
Cell[173668, 3619, 850, 11, 86, "Output"]
}, Open  ]],
Cell[174533, 3633, 102, 2, 30, "Input"],
Cell[174638, 3637, 298, 9, 30, "Input"],
Cell[174939, 3648, 127, 2, 30, "Input"],
Cell[175069, 3652, 10204, 224, 557, "Input"],
Cell[CellGroupData[{
Cell[185298, 3880, 129, 2, 30, "Input"],
Cell[185430, 3884, 340, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185807, 3895, 6823, 218, 297, "Input"],
Cell[192633, 4115, 157, 2, 22, "Print"]
}, {2}]],
Cell[192802, 4120, 408, 10, 30, "Input"],
Cell[193213, 4132, 634, 18, 30, "Input"],
Cell[193850, 4152, 1347, 41, 88, "Input"],
Cell[195200, 4195, 2046, 52, 74, "Input"],
Cell[197249, 4249, 1563, 32, 50, "Input"],
Cell[CellGroupData[{
Cell[198837, 4285, 8355, 196, 579, "Input"],
Cell[207195, 4483, 213, 3, 22, "Print"]
}, {2}]],
Cell[CellGroupData[{
Cell[207442, 4491, 9401, 187, 558, "Input"],
Cell[216846, 4680, 258, 3, 22, "Print"]
}, {2}]],
Cell[CellGroupData[{
Cell[217138, 4688, 1212, 26, 50, "Input"],
Cell[218353, 4716, 626, 10, 30, "Output"]
}, Open  ]],
Cell[218994, 4729, 475, 14, 30, "Input"],
Cell[219472, 4745, 6285, 165, 385, "Input"],
Cell[225760, 4912, 1561, 41, 106, "Input"],
Cell[CellGroupData[{
Cell[227346, 4957, 667, 19, 30, "Input"],
Cell[228016, 4978, 853, 19, 50, "Output"]
}, Open  ]],
Cell[228884, 5000, 3485, 90, 88, "Input"],
Cell[232372, 5092, 1100, 27, 88, "Input"],
Cell[233475, 5121, 1061, 23, 88, "Input"],
Cell[CellGroupData[{
Cell[234561, 5148, 2840, 72, 164, "Input"],
Cell[237404, 5222, 514, 8, 30, "Output"],
Cell[237921, 5232, 513, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238471, 5245, 2878, 74, 164, "Input"],
Cell[241352, 5321, 326, 6, 30, "Output"],
Cell[241681, 5329, 325, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242043, 5340, 2881, 74, 164, "Input"],
Cell[244927, 5416, 144, 3, 30, "Output"],
Cell[245074, 5421, 143, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245254, 5429, 843, 25, 69, "Input"],
Cell[246100, 5456, 644, 18, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246781, 5479, 523, 15, 30, "Input"],
Cell[247307, 5496, 710, 21, 63, "Output"]
}, Open  ]]
}
]
*)

